p_graph <- "./../../data/graphs_integration/borda_sw_004/Controls/CTRL_amore.graphml"
read.graph(p_graph, format= "graphml")
library(igraph)
read.graph(p_graph, format= "graphml")
random_walk(g)
g <- random_walk(g)
random_walk(g)
g <- read.graph(p_graph, format= "graphml")
random_walk(g)
random_walk(g, start = 1)
random_walk(g, start = 1, steps = 100)
random_walk(g, start = 1, steps = 10000)
V(g)[1]
w <- E(g)$fmri
w
rand
?rand
r=0.6
prob = [0.5, 0.1, 0.4];
x = sum(r >= cumsum([0, prob]));
prob = c(0.5, 0.1, 0.4)
prob
cumsum(prob)
r >= cumsum(prob)
?cumsum
sum(r >= cumsum(prob))
r = 0.1
sum(r >= cumsum(prob))
sum(r >= cumsum(prob))
a <- c(0.1, 0.2)
s <- sum(a)
s
a/s
neighborhood(g, nodes=1, mode="out")
?neighborhood
neighborhood(g, order=1, nodes=1, mode="out")
nn <- neighborhood(g, order=1, nodes=1, mode="out")
get.edge.attribute(g, name ="fmri", index=nn)
nn
get.edge.attribute(g, name ="fmri", index=unlist(nn))7
get.edge.attribute(g, name ="fmri", index=unlist(nn))
neighborhood.size(graph, mode = "out", order = 1, nodes = walker)
neighborhood.size(1, mode = "out", order = 1, nodes = walker)
neighborhood.size(1, mode = "out", order = 1, nodes = 1)
neighborhood.size(g, mode = "out", order = 1, nodes = 1)
incident(g, mode = "out", v = 1)
ii <- incident(g, mode = "out", v = 1)
ii[1]
get.edge.attribute(g, name = "roiName", ii[1])
get.edge.attribute(g, name = "fmri", ii[1])
get.edge.attribute(g, name = "fmri", ii[2])
get.edge.attribute(g, name = "fmri", ii[3])
get.edge.attribute(g, name = "fmri", ii[10])
E(g)$fmri
length(ii)
get.edge(g, ii[1])
ends(g, ii[1])
a <- vector(mode = "numeric", 10)
a
a <- vector(mode = "numeric", 1)
a
u <- runif(20)
?unif
?runif
r <- runif()
r <- runif(1)
r
r <- runif(1)
r <- runif(1)
r
r <- runif(1)
r
r
r
r
r <- runif(1)
r
r
r
r <- runif(1)
r
cumsum
cumsum(1,2)
cumsum(c(1,2))
?cumsum
cumsum(c(0,1,2))
ends(g, ii[1])
b <- ends(g, ii[1])
b[1]
b[2]
a = list()
c(a, 1)
a = vector()
a
c(a, 1)
# add the walker state to the history
?runif
?runif(min = 0, max = 90)
runif(min = 0, max = 90)
runif(1:90, min = 0, max = 90)
runif(1, min = 0, max = 90)
?sample
sample(1:90)
sample(1)
sample(1:10, 1)
sample(1:10, 1)
sample(1:10, 1)
sample(1:10, 1)
sample(1:10, 1)
p_graph <- "./../../data/graphs_integration/borda_sw_004/Controls/CTRL_amore.graphml"
g <- read.graph(p_graph, format= "graphml")
w <- E(g)$fmri
source('~/Tesi/project_integration_intersect_3groups/R/propagation/rand_walk_weights.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/rand_walk_weights.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/rand_walk_weights.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/rand_walk_weights.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/rand_walk_weights.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/rand_walk_weights.R', echo=TRUE)
elif
source('~/Tesi/project_integration_intersect_3groups/R/propagation/rand_walk_weights.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/rand_walk_weights.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/rand_walk_weights.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/rand_walk_weights.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/rand_walk_weights.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/rand_walk_weights.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/rand_walk_weights.R', echo=TRUE)
res$visited
length(res$visited)
length(res$history)
length(res$teleports)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/rand_walk_weights.R', echo=TRUE)
res2$visited
res2$teleports
res2$history
res1$visited
res1$history
source('~/Tesi/project_integration_intersect_3groups/R/propagation/rand_walk_weights.R', echo=TRUE)
res2$history
res2$teleports
res1$teleports
res1$history
source('~/Tesi/project_integration_intersect_3groups/R/propagation/rand_walk_weights.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/rand_walk_weights.R', echo=TRUE)
res
res$history
source('~/Tesi/project_integration_intersect_3groups/R/propagation/rand_walk_weights.R', echo=TRUE)
res
res1
source('~/.active-rstudio-document', echo=TRUE)
res1
source('~/Tesi/project_integration_intersect_3groups/R/propagation/rand_walk_weights.R', echo=TRUE)
res1
source('~/Tesi/project_integration_intersect_3groups/R/propagation/rand_walk_weights.R', echo=TRUE)
res1
res2
library(igraph)
p_graph <- "./../../data/graphs_integration/borda_sw_004/Controls/CTRL_amore.graphml"
g <- read.graph(p_graph, format= "graphml")
library(igraph)
w <- E(g)$fmri
w <- E(g)$fmri
g <- read.graph(p_graph, format= "graphml")
w <- E(g)$fmri
w <- abs(E(g)$fmri)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/rand_walk_weighted.R', echo=TRUE)
res
source('~/Tesi/project_integration_intersect_3groups/R/propagation/rand_walk_weighted.R', echo=TRUE)
res
source('~/Tesi/project_integration_intersect_3groups/R/propagation/rand_walk_weighted.R', echo=TRUE)
res
source('~/Tesi/project_integration_intersect_3groups/R/propagation/rand_walk_weighted.R', echo=TRUE)
res
source('~/Tesi/project_integration_intersect_3groups/R/propagation/rand_walk_weighted.R', echo=TRUE)
res
source('~/Tesi/project_integration_intersect_3groups/R/propagation/exp_frequency/driver_controls.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/analysis_steps.R', echo=TRUE)
igraphs_controls
data
unlist(data)
a <- unlist(data)
a
str(a)
a["nsteps"]
a["nsteps",]
dim(a)
a == "steps"
a[,"nsteps"]
a(),"nsteps")
a(,"nsteps")
a[],"nsteps"]
a$steps
levels(a)
a[1]
a[3]
a%%2 == 0
source('~/Tesi/project_integration_intersect_3groups/R/propagation/analysis_steps.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/analysis_steps.R', echo=TRUE)
nsteps
mean(nsteps)
udata[1]
udata[1]%%2
udata[1]%%2 == 0
source('~/Tesi/project_integration_intersect_3groups/R/propagation/analysis_steps.R', echo=TRUE)
nsteps
source('~/Tesi/project_integration_intersect_3groups/R/propagation/analysis_steps.R', echo=TRUE)
nsteps
mean(nsteps)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/analysis_steps.R', echo=TRUE)
nsteps
mean(nsteps)
nvisited
source('~/Tesi/project_integration_intersect_3groups/R/propagation/analysis_steps.R', echo=TRUE)
meanSteps
debugSource('~/Tesi/project_integration_intersect_3groups/R/propagation/server/driver_controls_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/analysis_steps.R', echo=TRUE)
meadin
meadian
median
source('~/Tesi/project_integration_intersect_3groups/R/propagation/analysis_steps.R', echo=TRUE)
meanSteps
source('~/Tesi/project_integration_intersect_3groups/R/propagation/analysis_steps.R', echo=TRUE)
meanSteps
source('~/Tesi/project_integration_intersect_3groups/R/propagation/analysis_steps.R', echo=TRUE)
meanSteps
source('~/Tesi/project_integration_intersect_3groups/R/propagation/analysis_steps.R', echo=TRUE)
meanSteps
source('~/Tesi/project_integration_intersect_3groups/R/propagation/analysis_steps.R', echo=TRUE)
meanSteps

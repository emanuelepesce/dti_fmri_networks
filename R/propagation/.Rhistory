source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
colors
cl
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
x<-rnorm(20)
y<-rnorm(20)
# use y for the color scale
plot(x,y,col=color.scale(y,c(0,1,1),c(1,1,0),0),main="Color scale plot",
pch=16,cex=2)
x
y
color.scale(y,c(0,1,1),c(1,1,0),0)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
color.scale(y,c(0,1,1),c(1,1,0),0)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
colors <- color.scale(colors,c(0,1,1),c(1,1,0),0)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
# go from green through yellow to red with no blue
x<-rnorm(20)
y<-rnorm(20)
# use y for the color scale
plot(x,y,col=color.scale(y,c(0,1,1),c(1,1,0),0),main="Color scale plot",
pch=16,cex=2)
plot(1:10,rep(1:3,length.out=10),axes=FALSE,type="n",xlim=c(0,11),ylim=c(0,4),
main="Test of RGB, HSV and HCL",xlab="",ylab="Color specification")
axis(2,at=1:3,labels=c("HCL","HSV","RGB"))
points(1:10,rep(1,10),pch=19,cex=8,col=color.scale(1:10,c(0,300),35,85,
color.spec="hcl"))
points(1:10,rep(2,10),pch=19,cex=8,col=color.scale(1:10,c(0,1),
0.8,1,color.spec="hsv"))
points(1:10,rep(3,10),pch=19,cex=8,col=color.scale(1:10,c(1,0.5,0),
c(0,0.5,0),c(0,0,1),color.spec="rgb"))
# go from green through yellow to red with no blue
x<-rnorm(20)
y<-rnorm(20)
# use y for the color scale
plot(x,y,col=color.scale(y,c(0,1,1),c(1,1,0),0),main="Color scale plot",
pch=16,cex=2)
plot(1:10,rep(1:3,length.out=10),axes=FALSE,type="n",xlim=c(0,11),ylim=c(0,4),
main="Test of RGB, HSV and HCL",xlab="",ylab="Color specification")
axis(2,at=1:3,labels=c("HCL","HSV","RGB"))
points(1:10,rep(1,10),pch=19,cex=8,col=color.scale(1:10,c(0,300),35,85,
color.spec="hcl"))
points(1:10,rep(2,10),pch=19,cex=8,col=color.scale(1:10,c(0,1),
0.8,1,color.spec="hsv"))
points(1:10,rep(3,10),pch=19,cex=8,col=color.scale(1:10,c(1,0.5,0),
c(0,0.5,0),c(0,0,1),color.spec="rgb"))
scale_colour_gradientn(colours=rainbow(4)
)
scale_colour_gradientn(colours=rainbow(4))
library(ggplot2)
scale_colour_gradientn(colours=rainbow(4))
colfunc <- colorRampPalette(c("black", "white"))
colfunc(10)
plot(rep(1,10),col=colfunc(10),pch=19,cex=3)
plot(rep(1,10),col=colfunc(90),pch=19,cex=3)
colfunc(90)
colfunc<-colorRampPalette(c("red","yellow","springgreen","royalblue"))
colfunc(10)
c(1, 0 , -1, 1)
a <- c(1, 0 , -1, 1)
plot(a,col=colfunc(90),pch=19,cex=3)
plot(a,col=colfunc(4),pch=19,cex=3)
sort(a)
a <- sort(a)
plot(a,col=colfunc(4),pch=19,cex=3)
a
col <- colfunc(10)
col
col
v.times
load(p.data)
v.times <- analysis.prop$time.regions[2]
v.times <- t(as.vector(round(v.times + 10, 0)))
v.times <- analysis.prop$time.regions[2]
v.times
v.times/max(v.times)
library(arules)
v <- v.times/max(v.times)
table(cut2(v, g=10))      # quantile groups
library(Hmisc)
table(cut2(v, g=10))      # quantile groups
x <- runif(1000, 0, 100)
z <- cut2(x, c(10,20,30))
z
x
x <- runif(1000, 0, 100)
z <- cut2(x, c(10,20,30))
z
table(z)
table(cut2(x, g=10))      # quantile groups
table(cut2(x, m=50))      # group x into intevals with at least 50 obs.
dat$Col <- rbPal(10)[as.numeric(cut(dat$y,breaks = 10))]
dat$Col <- colfunc(10)[as.numeric(cut(dat$y,breaks = 10))]
dat$Col <- colfunc(10)[as.numeric(cut(v,breaks = 10))]
v
rbPal <- colorRampPalette(c('red','blue'))
rbPal <- colorRampPalette(c('red','blue'))
x <- runif(100)
dat <- data.frame(x = x,y = x^2 + 1)
dat
dat$Col <- rbPal(10)[as.numeric(cut(dat$y,breaks = 10))]
dat$Col
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
colfunc<-colorRampPalette(c("red","yellow","springgreen","royalblue"))
plot(rep(1,50),col=(colfunc(50)), pch=19,cex=2)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
text(x=1.5, y = seq(0,1,l=5), labels = seq(0,1,l=5))
rasterImage(legend_image, 0, 0, 1,1)
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'legend title')
text(x=1.5, y = seq(0,1,l=5), labels = seq(0,1,l=5))
rasterImage(legend_image, 0, 0, 1,1)
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
plot(1:20, 1:20, pch = 19, cex=2, col = colfunc(20))
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'legend title')
text(x=1.5, y = seq(0,1,l=5), labels = seq(0,1,l=5))
rasterImage(legend_image, 0, 0, 1,1)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
plot_times(g, 10, colors)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
colors <- rbPal(20)[as.numeric(cut(dat$y,breaks = 20))]
plot_times(g, 10, colors)
colors <- colfunc(20)[as.numeric(cut(dat$y,breaks = 20))]
plot_times(g, 10, colors)
colors <- colfunc(30)[as.numeric(cut(v.times,breaks = 0))]
colors <- colfunc(30)[as.numeric(cut(v.times,breaks = 20))]
plot_times(g, 10, colors)
plot_times(g, 30, colors)
colors <- colfunc(30)[as.numeric(cut(v.times,breaks = 3s0))]
colors <- colfunc(30)[as.numeric(cut(v.times,breaks = 30))]
plot_times(g, 10, colors)
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
plot(1:20, 1:20, pch = 19, cex=2, col = colfunc(20))
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'legend title')
text(x=1.5, y = seq(0,1,l=5), labels = seq(0,1,l=5))
text(x=1.5, y = seq(0,1,l=5), labels = seq(0,1,l=5))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'legend title')
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
plot(1:20, 1:20, pch = 19, cex=2, col = colfunc(20))
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'legend title')
text(x=1.5, y = seq(0,1,l=5), labels = seq(0,1,l=5))
rasterImage(legend_image, 0, 0, 1,1)
rasterImage(sort(legend_image, mode = "descr"), 0, 0, 1,1)
library(igraph)
library(RColorBrewer)
library(plotrix)
library(ggplot2)
plot_times <- function(ex.graph, v.weights, seed){
# get coordinates
x <- V(g)$cx
y <- V(g)$cy
z <- V(g)$cz
coords <- cbind(x,y,z)
# colors
colfunc <- colorRampPalette(c("red","yellow","springgreen","royalblue"))
v.colors <- colfunc(30)[as.numeric(cut(v.weights,breaks = 30))]
# 2d projection plot
#   jpeg(filename = pathOut2d, width = 1000, height = 1000)
#   plot(g, vertex.color = hcc, vertex.size = 10, edge.arrow.mode = 0, layout = coords[,-3])
#   dev.off()
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
plot(ex.graph, vertex.color = v.colors, vertex.size = 10,
edge.arrow.mode = 0,
layout = coords[,-3])
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'legend title')
text(x=1.5, y = seq(0,1,l=5), labels = seq(0,1,l=5))
rasterImage(sort(legend_image, mode = "descr"), 0, 0, 1,1)
}
p.g <- "./../../data/results/borda_example_graph.graphml"
g <- read.graph(p.g, format= "graphml")
p.data <- "./../../data/results/propagation/random_walk/borda/fmri/analysis_prop_r1.RData"
load(p.data)
v.times <- analysis.prop$time.regions[2]
v.times <- t(as.vector(round(v.times + 10, 0)))
seed <- 1
plot_times(g, v.times, 1)
legend_image <- as.raster(matrix(colfunc(10), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'legend title')
text(x=1.5, y = seq(0,1,l=5), labels = seq(0,1,l=5))
rasterImage(sort(legend_image, mode = "descr"), 0, 0, 1,1)
colfunc <- colorRampPalette(c("red","yellow","springgreen","royalblue"))
legend_image <- as.raster(matrix(colfunc(10), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'legend title')
text(x=1.5, y = seq(0,1,l=5), labels = seq(0,1,l=5))
rasterImage(sort(legend_image, mode = "descr"), 0, 0, 1,1)
legend_image <- as.raster(matrix(colfunc(4), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'legend title')
text(x=1.5, y = seq(0,1,l=5), labels = seq(0,1,l=5))
rasterImage(sort(legend_image, mode = "descr"), 0, 0, 1,1)
rasterImage(legend_image, 0, 0, 1,1)
legend_image <- as.raster(matrix(colfunc(4), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'legend title')
text(x=1.5, y = seq(0,1,l=5), labels = seq(0,1,l=5))
rasterImage(legend_image, 0, 0, 1,1)
legend_image <- as.raster(matrix(colfunc(10), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'legend title')
text(x=1.5, y = seq(0,1,l=5), labels = seq(0,1,l=5))
rasterImage(legend_image, 0, 0, 1,1)
legend_image <- as.raster(matrix(colfunc(30), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'legend title')
text(x=1.5, y = seq(0,1,l=5), labels = seq(0,1,l=5))
rasterImage(legend_image, 0, 0, 1,1)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
seq(max(v.weights),min(v.weights),l=5)
debugSource('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
seq(max(v.weights),min(v.weights),l=5)
v.weights
debugSource('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
c
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
v.times
v.times <- as.vector(analysis.prop$time.regions[2])
v.times
source('~/.active-rstudio-document', echo=TRUE)
v.times <- t(as.vector(analysis.prop$time.regions[2]))
source('~/.active-rstudio-document', echo=TRUE)
debugSource('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
text(x=1.5, y = seq(max(v.weights),min(v.weights),l=5), labels = seq(0,1,l=5))
seq(max(v.weights),min(v.weights),l=5)
debugSource('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
text(x=1.5, y = c(0,1), labels = seq(max(v.weights),min(v.weights),l=5))
source('~/.active-rstudio-document', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
v.times
analysis.prop$time.regions
str(analysis.prop$time.regions)
str(analysis.prop$time.regions$Controls)
v.times <- analysis.prop$time.regions$Controls
v.times
v.times <- v.times/max(v.times)
v.times
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
legend_image
sort(legend_image, mode = "descr")
sort(legend_image, mode = "inverse")
rev(legend_image)
legend_image
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
ss <- seq(min(v.weights),max(v.weights),l=5)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
?layout
matrix(1:2,ncol=2)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
analysis.prop
analysis.prop
shapes <- setdiff(vertex.shapes(), "")
shapes <- setdiff(vertex.shapes(), "")
shapes
shapes <- rep("circle", 90)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
shape[seed] <- "rectangle"
shapes <- rep("circle", 90)
shapes[seed] <- "rectangle"
shapes
source('~/.active-rstudio-document', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
data.frame(seq(1:90), V(ex.graph)$roiName)
ptext(regions)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
?text
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
analysis.prop$freq.topK
source('~/Tesi/project_integration_intersect_3groups/R/propagation/driver_propdata_dti.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/driver_propdata_dti.R', echo=TRUE)
analysis.prop
rm(list=ls())
library(igraph)
source("./analysis_prop_func.R", chdir = T)
# ================================ Region 1 ==============================
path.base <- "./../../data/results/propagation/rand_walk_complete/borda_sw_004/server_dti_complete_r1/"
pathIn.ctrl <- "./random_walk/borda/dti/prop_ctrl_dti_r1.RData"
pathIn.sla2 <- "./random_walk/borda/dti/prop_sla2_dti_r1.RData"
pathIn.sla3 <- "./random_walk/borda/dti/prop_sla3_dti_r1.RData"
pathIn.graph_ex <- ("./../../data/results/borda_example_graph.graphml")
pathOut.save <- "./../../data/results/propagation/random_walk/borda/dti/analysis_prop_r1.RData"
g <- read.graph(pathIn.graph_ex, format = "graphml")
pathOut.obj <- "./analysis_complete.RData"
res.prop <- list()
load(pathIn.ctrl)
res.prop[[1]] <- data.prop
load(pathIn.sla2)
res.prop[[2]] <- data.prop
load(pathIn.sla3)
res.prop[[3]] <- data.prop
prop_analysys(res.prop, freq.k = 10, g, pathOut.obj)
load(pathOut.obj)
save(analysis.prop, file = pathOut.save)
analysis.prop
rm(list=ls())
library(igraph)
source("./analysis_prop_func.R", chdir = T)
# ================================ Region 1 ==============================
path.base <- "./../../data/results/propagation/rand_walk_complete/borda_sw_004/server_dti_complete_r1/"
pathIn.ctrl <- "./random_walk/borda/dti/prop_ctrl_dti_r1.RData"
pathIn.sla2 <- "./random_walk/borda/dti/prop_sla2_dti_r1.RData"
pathIn.sla3 <- "./random_walk/borda/dti/prop_sla3_dti_r1.RData"
pathIn.graph_ex <- ("./../../data/results/borda_example_graph.graphml")
pathOut.save <- "./../../data/results/propagation/random_walk/borda/dti/analysis_prop_r1.RData"
g <- read.graph(pathIn.graph_ex, format = "graphml")
pathOut.obj <- "./analysis_complete.RData"
res.prop <- list()
load(pathIn.ctrl)
res.prop[[1]] <- data.prop
load(pathIn.sla2)
res.prop[[2]] <- data.prop
load(pathIn.sla3)
res.prop[[3]] <- data.prop
prop_analysys(res.prop, freq.k = 10, g, pathOut.obj)
rm(list=ls())
library(igraph)
source("./analysis_prop_func.R", chdir = T)
# ================================ Region 1 ==============================
path.base <- "./../../data/results/propagation/rand_walk_complete/borda_sw_004/server_dti_complete_r1/"
pathIn.ctrl <- "./random_walk/borda/dti/prop_ctrl_dti_r1.RData"
pathIn.sla2 <- "./random_walk/borda/dti/prop_sla2_dti_r1.RData"
pathIn.sla3 <- "./random_walk/borda/dti/prop_sla3_dti_r1.RData"
pathIn.graph_ex <- ("./../../data/results/borda_example_graph.graphml")
pathOut.save <- "./../../data/results/propagation/random_walk/borda/dti/analysis_prop_r1.RData"
g <- read.graph(pathIn.graph_ex, format = "graphml")
pathOut.obj <- "./analysis_complete.RData"
res.prop <- list()
load(pathIn.ctrl)
res.prop[[1]] <- data.prop
load(pathIn.sla2)
res.prop[[2]] <- data.prop
load(pathIn.sla3)
res.prop[[3]] <- data.prop
prop_analysys(res.prop, freq.k = 10, g, pathOut.obj)
load(pathOut.obj)
save(analysis.prop, file = pathOut.save)
analysis.prop
source('~/Tesi/project_integration_intersect_3groups/R/propagation/driver_propdata_dti.R', echo=TRUE)
edges <- analysis.prop$freq.topK.id[[1]]$Area_From
edges
edges_s <- analysis.prop$freq.topK.id[[1]]$Area_To
edges.s <- analysis.prop$freq.topK.id[[1]]$Area_From
edges.t <- analysis.prop$freq.topK.id[[1]]$Area_To
edges <- cbind(edges.s, edges.t)
edges
val <- analysis.prop$freq.topK.id[[1]]$Value
edges <- cbind(edges.s, edges.t, val)
edges <- cbind(edges.s, edges.t, val)
edges
edges.size <- rep(1, ecount(ex.graph))
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
edges
edges.s <- analysis.prop$freq.topK.id[[1]]$Area_From
edges.t <- analysis.prop$freq.topK.id[[1]]$Area_To
val <- analysis.prop$freq.topK.id[[1]]$Value
edges <- cbind(edges.s, edges.t, val)
edges
source('~/.active-rstudio-document', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
edges
edges.s <- analysis.prop$freq.topK.id[[1]]$Area_From
edges.t <- analysis.prop$freq.topK.id[[1]]$Area_To
val <- analysis.prop$freq.topK.id[[1]]$Value
edges <- cbind(edges.s, edges.t, val)
edges
edges.s
p.g <- "./../../data/results/borda_example_graph.graphml"
g <- read.graph(p.g, format= "graphml")
p.data <- "./../../data/results/propagation/random_walk/borda/fmri/analysis_prop_r1.RData"
load(p.data)
v.times <- analysis.prop$time.regions$Controls
v.times <- v.times/max(v.times)
seed <- 1
edges.s <- analysis.prop$freq.topK.id[[1]]$Area_From
edges.t <- analysis.prop$freq.topK.id[[1]]$Area_To
val <- analysis.prop$freq.topK.id[[1]]$Value
edges <- cbind(edges.s, edges.t, val)
edges
analysis.prop
edges.s <- analysis.prop$freq.topK.id[[1]]$Area_From
edges.s
analysis.prop$freq.topK.id[[1]]$Area_From
source('~/Tesi/project_integration_intersect_3groups/R/propagation/driver_propdata_dti.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
edges
source('~/Tesi/project_integration_intersect_3groups/R/propagation/driver_propdata_fmri.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
edges
get.edge.ids(1,1)
get.edge.ids(g, 1,1)
get.edge.ids(g, 1,2)
g
get.edge.ids(g, c(1,2))
get.edge.ids(g, c(1,3))
get.edge.ids(g, c(1,7))
edges[,1]
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
debugSource('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
edges.size
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
edges
plot_times(g, v.times, 1, 10, edges.info = edges,"Controls Fmri")
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
debugSource('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
val
debugSource('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
debugSource('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
debugSource('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
debugSource('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
debugSource('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
val
val <- min_max_norm(edges.info[,3], 1, 15)
val
edges.info[,3]
library(scale)
install.packages("scale")
install.packages("Scale")
install.packages("scales")
install.packages("scales")
debugSource('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
val
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
debugSource('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
edges.size
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/driver_propdata_fmri.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/plot_times_prop.R', echo=TRUE)

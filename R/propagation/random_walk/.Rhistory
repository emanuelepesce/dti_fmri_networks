source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
stopCluster(cl)
stopCluster(cl)
time.start <- proc.time()
time.start
source('~/.active-rstudio-document', echo=TRUE)
time.used
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
install.packages("compiler")
require(compiler)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
stopCluster(cl)
stopCluster(cl)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
slow_func <- function(X, FUN, ...) {
FUN <- match.fun(FUN)
if (!is.list(X))
X <- as.list(X)
rval <- vector("list", length(X))
for(i in seq(along = X))
rval[i] <- list(FUN(X[[i]], ...))
names(rval) <- names(X)          # keep `names' !
return(rval)
}
# Compiled versio
# Compiled versions
require(compiler)
slow_func_compiled <- cmpfun(slow_func)
fo <- function() for (i in 1:1000) slow_func(1:100, is.null)
fo_c <- function() for (i in 1:1000) slow_func_compiled(1:100, is.null)
system.time(fo())
system.time(fo_c())
fo <- function() for (i in 1:10000) slow_func(1:100, is.null)
fo_c <- function() for (i in 1:10000) slow_func_compiled(1:100, is.null)
system.time(fo())
system.time(fo_c())
system.time(fo())
system.time(fo_c())
fo_compiled <- cmpfun(fo)
system.time(fo_compiled()) # doing this, will not change the speed at all:
enableJIT(3)
system.time(fo())
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/analysis_propdata.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/analysis_propdata.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
stopCluster(cl)
stopCluster(cl)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
stopCluster(cl)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
path <- "./../../../data/graphs_integration/borda_sw_004/igraphs_SLA3.RData"
load(path)
igraphs_SLA3
g <- igraphs_SLA3[[1]]
g
is.connected(g)
rand_walk_weighted(g, weights = E(g)$fmri, seed = 68, maxiter = 1000)
rand_walk_weighted(g, weights = E(g)$fmri, seed = 68, maxiter = 4000)
rand_walk_weighted(g, weights = E(g)$dti, seed = 68, maxiter = 4000)
path <- "./../../../data/graphs_integration/sign_test/igraphs_SLA3.RData"
is.connected(g)
load(path)
g <- igraphs_SLA3[[1]]
g
is.connected(g)
rand_walk_weighted(g, weights = E(g)$dti, seed = 68, maxiter = 4000)
rand_walk_weighted(g, weights = E(g)$fmri, seed = 68, maxiter = 1000)
rand_walk_weighted(g, weights = E(g)$fmri, seed = 68, maxiter = 100)
rand_walk_weighted(g, weights = E(g)$fmri, seed = 68, maxiter = 200)
E(g)
E(g)$fmri
random_walk(g)
random_walk(g, start = 68, steps = 100)
random_walk(g, start = 68, steps = 1000)
random_walk(g, start = 68, steps = 1000)
random_walk(g, start = 68, steps = 1000)
random_walk(g, start = 68, steps = 1000)
random_walk(g, start = 68, steps = 1000)
random_walk(g, start = 68, steps = 1000)
random_walk(g, start = 68, steps = 1000)
random_walk(g, start = 68, steps = 1000)
random_walk(g, start = 68, steps = 1000)
random_walk(g, start = 68, steps = 1000)
random_walk(g, start = 68, steps = 1000)
random_walk(g, start = 68, steps = 1000)
random_walk(g, start = 68, steps = 1000)
random_walk(g, start = 68, steps = 1000)
?random_walk
is.connected(g, "strong")
ug <- undirected_graph(g, )
ug <- undirected_graph(g)
ug
g
?undirected_graph
as.undirected(g, mode = "collapse")
g <- as.undirected(g, mode = "collapse")
is.connected(g)
is.connected(g, "strong")
rand_walk_weighted(g, weights = E(g)$fmri, seed = 68, maxiter = 200)
rand_walk_weighted(g, weights = E(g)$fmri, seed = 68, maxiter = 1000)
E(g)
g
g <- as.undirected(g, mode = "collapse", edge.attr.comb=list("fmri"))
g <- as.undirected(g, mode = "collapse", edge.attr.comb=list("fmri", "dti"))
simplify(g, edge.attr.comb="mean")
g
g
simplify(g, edge.attr.comb="mean")
g
g <- as.undirected(g, mode = "collapse")
ug <- simplify(ug, edge.attr.comb="mean")
ug <- simplify(g, edge.attr.comb="mean")
g
g <- igraphs_SLA3[[1]]
g
sg <- simplify(g, edge.attr.comb="mean")
sg
ug <- as.undirected(sg, mode = "collapse")
ug
ug <- as.undirected(g, mode = "collapse", edge.attr.comb = "mean")
ug
g
ug <- as.undirected(g, mode = "collapse", edge.attr.comb = "sum")
ug
ug <- as.undirected(g, mode = "collapse", edge.attr.comb = "mean")
ug
g1 <- set.edge.attribute(g, index = E(g), name = "prova", value = abs(E(g)$fmri))
g1
ug <- as.undirected(g1, mode = "collapse", edge.attr.comb = "mean")
ug
g1
g1
ug <- as.undirected(g1, mode = "collapse", edge.attr.comb = "mean")
E(g)$fmru
E(g)$fmri
E(g1)$fmri
E(ug)$fmri
E(g)
E(ug)
g1
E(g1)$fmri
E(g1)$prova
E(ug)$prova
ug <- as.undirected(g1, mode = "collapse", edge.attr.comb = prova = "mean")
ug <- as.undirected(g1, mode = "collapse", edge.attr.comb = list(prova = "mean")
)
ug
ug
g
ug <- as.undirected(g1, mode = "collapse", edge.attr.comb = list(prova = "mean", "ignore")
)
ug
g1
g1
E(g1)$prova
ug <- as.undirected(g1, mode = "collapse", edge.attr.comb = list(prova = "mean", "ignore")
)
ug <- as.undirected(g1, mode = "collapse", edge.attr.comb = list(prova = "mean", "ignore"))
ug
ug <- as.undirected(g1, mode = "each", edge.attr.comb = list(prova = "mean", "ignore"))
ug
ug <- as.undirected(g, mode = "each", edge.attr.comb = list(prova = "mean", "ignore"))
ug
is.connected(ug)
is.connected(ug, "strong")
source("./rw_propagation_un.R", chdir = T)
source("./rw_propagation_un.R", chdir = T)
driver_exp(cl, seed, times, maxiter, pathIn.sla3, "s3", pathOutS3)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
g
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
load(pathIn.sla3)
graph <- igraphs_SLA3[[1]]
w <- abs(E(graph)$fmri)
ug <- set.edge.attribute(graph, name = "tmp_att", index = E(graph), value = w)
ug <- as.undirected(ug, mode = "each", edge.attr.comb = list(tmp_att= "mean", "ignore"))
w <- E(graph)$tmp_att
graph <- ug
graph
pathIn.sla3 <- "./../../../data/graphs_integration/sign_test/igraphs_SLA3.RData"
load(pathIn.sla3)
graph <- igraphs_SLA3[[1]]
w <- E(graph)$tmp_att
ug <- set.edge.attribute(graph, name = "tmp_att", index = E(graph), value = w)
ug <- as.undirected(ug, mode = "each", edge.attr.comb = list(tmp_att= "mean", "ignore"))
w <- E(graph)$tmp_att
ug
graph <- ug
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
load(pathIn.sla3)
pathIn.sla3 <- "./../../../data/graphs_integration/sign_test/igraphs_SLA3.RData"
load(pathIn.sla3)
pathIn.sla3 <- "./../../../data/graphs_integration/sign_test/igraphs_SLA3.RData"
load(pathIn.sla3)
graph <- igraphs_SLA3[[1]]
pathIn.sla3 <- "./../../../data/graphs_integration/sign_test/igraphs_SLA3.RData"
load(pathIn.sla3)
graph <- igraphs_SLA3[[1]]
ug <- set.edge.attribute(graph, name = "tmp_att", index = E(graph), value = w)
ug <- as.undirected(ug, mode = "each", edge.attr.comb = list(tmp_att= "mean", "ignore"))
w <- E(graph)$tmp_att
graph <- ug
w <- abs(E(graph)$fmri)
ug <- set.edge.attribute(graph, name = "tmp_att", index = E(graph), value = w)
ug <- as.undirected(ug, mode = "each", edge.attr.comb = list(tmp_att= "mean", "ignore"))
w <- E(graph)$tmp_att
graph <- ug
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/rw_propagation_un.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/rw_propagation_un.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/rw_propagation_un.R', echo=TRUE)
driver_exp(cl, 1, 1, 1000, pathIn.sla3, "s3", "prova.RData")
debugSource('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/rw_propagation_un.R', echo=TRUE)
debugSource('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/rw_propagation_un.R', echo=TRUE)
debugSource('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/rw_propagation_un.R', echo=TRUE)
debugSource('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/rw_propagation_un.R', echo=TRUE)
rand_walk_weighted(graph, E(graph)$tmp_att, 1, maxiter)
rand_walk_weighted(graph, E(graph)$tmp_att, 1, 100)
graph
pathIn.sla3 <- "./../../../data/graphs_integration/sign_test/igraphs_SLA3.RData"
load(pathIn.sla3)
graph <- igraphs_SLA3[[1]]
w <- abs(E(graph)$fmri)
ug <- set.edge.attribute(graph, name = "tmp_att", index = E(graph), value = w)
ug <- as.undirected(ug, mode = "each", edge.attr.comb = list(tmp_att= "mean", "ignore"))
w <- E(graph)$tmp_att
graph <- ug
rand_walk_weighted(graph, w, 1, 100)
rand_walk_weighted(graph, w, 1, 100)
w
ug <- set.edge.attribute(graph, name = "tmp_att", index = E(graph), value = w)
ug <- as.undirected(ug, mode = "each", edge.attr.comb = list(tmp_att= "mean", "ignore"))
w <- E(graph)$tmp_att
graph <- ug
w
pathIn.sla3 <- "./../../../data/graphs_integration/sign_test/igraphs_SLA3.RData"
load(pathIn.sla3)
graph <- igraphs_SLA3[[1]]
w <- abs(E(graph)$fmri)
ug <- set.edge.attribute(graph, name = "tmp_att", index = E(graph), value = w)
ug <- as.undirected(ug, mode = "each", edge.attr.comb = list(tmp_att= "mean", "ignore"))
w <- E(graph)$tmp_att
graph <- ug
w
pathIn.sla3 <- "./../../../data/graphs_integration/sign_test/igraphs_SLA3.RData"
load(pathIn.sla3)
graph <- igraphs_SLA3[[1]]
w <- abs(E(graph)$fmri)
ug <- set.edge.attribute(graph, name = "tmp_att", index = E(graph), value = w)
ug <- as.undirected(ug, mode = "each", edge.attr.comb = list(tmp_att= "mean", "ignore"))
w <- E(graph)$tmp_att
graph <- ug
w
w <- E(graph)$tmp_att
w
graph <- ug
w
pathIn.sla3 <- "./../../../data/graphs_integration/sign_test/igraphs_SLA3.RData"
load(pathIn.sla3)
graph <- igraphs_SLA3[[1]]
w <- abs(E(graph)$fmri)
ug <- set.edge.attribute(graph, name = "tmp_att", index = E(graph), value = w)
ug <- as.undirected(ug, mode = "each", edge.attr.comb = list(tmp_att= "mean", "ignore"))
w <- E(graph)$tmp_att
graph <- ug
w
w
E(graph)$tmp_att
pathIn.sla3 <- "./../../../data/graphs_integration/sign_test/igraphs_SLA3.RData"
load(pathIn.sla3)
graph <- igraphs_SLA3[[1]]
w <- abs(E(graph)$fmri)
ug <- set.edge.attribute(graph, name = "tmp_att", index = E(graph), value = w)
ug <- as.undirected(ug, mode = "each", edge.attr.comb = list(tmp_att= "mean", "ignore"))
w <- E(graph)$tmp_att
graph <- ug
rand_walk_weighted(graph, E(graph)$tmp_att, 1, 100)
E(graph)$tmp_att
pathIn.sla3 <- "./../../../data/graphs_integration/sign_test/igraphs_SLA3.RData"
load(pathIn.sla3)
graph <- igraphs_SLA3[[1]]
w <- abs(E(graph)$fmri)
ug <- set.edge.attribute(graph, name = "tmp_att", index = E(graph), value = w)
ug <- as.undirected(ug, mode = "each", edge.attr.comb = list(tmp_att= "mean", "ignore"))
graph <- ug
w <- E(graph)$tmp_att
rand_walk_weighted(graph, E(graph)$tmp_att, 1, 100)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR_un.R', echo=TRUE)
c(1,2,3)
a <- c(1,2,3)
b <- c(2,3,4)
a*b

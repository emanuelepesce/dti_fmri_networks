source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
stopCluster(cl)
stopCluster(cl)
time.start <- proc.time()
time.start
source('~/.active-rstudio-document', echo=TRUE)
time.used
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
install.packages("compiler")
require(compiler)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
stopCluster(cl)
stopCluster(cl)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
slow_func <- function(X, FUN, ...) {
FUN <- match.fun(FUN)
if (!is.list(X))
X <- as.list(X)
rval <- vector("list", length(X))
for(i in seq(along = X))
rval[i] <- list(FUN(X[[i]], ...))
names(rval) <- names(X)          # keep `names' !
return(rval)
}
# Compiled versio
# Compiled versions
require(compiler)
slow_func_compiled <- cmpfun(slow_func)
fo <- function() for (i in 1:1000) slow_func(1:100, is.null)
fo_c <- function() for (i in 1:1000) slow_func_compiled(1:100, is.null)
system.time(fo())
system.time(fo_c())
fo <- function() for (i in 1:10000) slow_func(1:100, is.null)
fo_c <- function() for (i in 1:10000) slow_func_compiled(1:100, is.null)
system.time(fo())
system.time(fo_c())
system.time(fo())
system.time(fo_c())
fo_compiled <- cmpfun(fo)
system.time(fo_compiled()) # doing this, will not change the speed at all:
enableJIT(3)
system.time(fo())
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/analysis_propdata.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/analysis_propdata.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/propagation/random_walk/driver_all_PAR.R', echo=TRUE)
stopCluster(cl)
stopCluster(cl)

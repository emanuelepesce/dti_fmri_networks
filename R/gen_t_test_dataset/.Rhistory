#' createMask
#'
#' Run sign test on edges in order to choose which edges to select to.
#' Then create a mask.
rm(list=ls())
library(igraph)
source("./../statistics_test/ttest.R")
# ------------------------ Initialization --------------------------------------
pathInMatrix <- "./../../data/other/matrix_all_edges.RData"
pathIn_ex_graph <- "./../../data/graphs_integration/full_connected/Controls/CTRL_amore.graphml"
pathOut_mask <- "./../../data/other/sign_test_005/mask_sign_test.csv"
# load data
load(file = pathInMatrix)
nrows <- dim(mat)[1]
ncols <- dim(mat)[2]
l_pvalues <- vector()
tmd <- 1e-05
trh <- 0.01
for(i in 1:nrows){
values <- mat[i,]
tt <-  t.test(values, mu = tmu)
l_pvalues <- c(l_pvalues, tt$p.value)
}
#' createMask
#'
#' Run sign test on edges in order to choose which edges to select to.
#' Then create a mask.
rm(list=ls())
library(igraph)
source("./../statistics_test/ttest.R")
# ------------------------ Initialization --------------------------------------
pathInMatrix <- "./../../data/other/matrix_all_edges.RData"
pathIn_ex_graph <- "./../../data/graphs_integration/full_connected/Controls/CTRL_amore.graphml"
pathOut_mask <- "./../../data/other/sign_test_005/mask_sign_test.csv"
# load data
load(file = pathInMatrix)
nrows <- dim(mat)[1]
ncols <- dim(mat)[2]
l_pvalues <- vector()
tmu <- 1e-05
trh <- 0.01
# ------------------------ Running ---------------------------------------------
# sign test on each row (a row of mat contains all the values of an edge for all
# subjects)
for(i in 1:nrows){
values <- mat[i,]
tt <-  t.test(values, mu = tmu)
l_pvalues <- c(l_pvalues, tt$p.value)
}
l_pvalues
tt$p.value
selected_idx <- which(l_pvalues <= trh, arr.ind = T)
selected_idx
adj <- p.adjust(l_pvalues, "bonferroni")
selected_idx <- which(l_pvalues <= trh, arr.ind = T)
adj
#' createMask
#'
#' Run sign test on edges in order to choose which edges to select to.
#' Then create a mask.
rm(list=ls())
library(igraph)
source("./../statistics_test/ttest.R")
# ------------------------ Initialization --------------------------------------
pathInMatrix <- "./../../data/other/matrix_all_edges.RData"
pathIn_ex_graph <- "./../../data/graphs_integration/full_connected/Controls/CTRL_amore.graphml"
pathOut_mask <- "./../../data/other/sign_test_005/mask_sign_test.csv"
# load data
load(file = pathInMatrix)
nrows <- dim(mat)[1]
ncols <- dim(mat)[2]
l_pvalues <- vector()
tmu <- 1e-05
trh <- 0.01
# ------------------------ Running ---------------------------------------------
# sign test on each row (a row of mat contains all the values of an edge for all
# subjects)
for(i in 1:nrows){
values <- mat[i,]
tt <-  t.test(values, mu = tmu)
l_pvalues <- c(l_pvalues, tt$p.value)
}
adj <- p.adjust(l_pvalues, "bonferroni")
selected_idx <- which(adj <= trh, arr.ind = T)
selected_idx
rm(list=ls())
load(file = "matrix.RData")
nrows <- dim(mat)[1]
ncols <- dim(mat)[2]
l_pvalues <- vector()
tmu <- 1e-05
trh <- 0.01
for(i in 1:nrows){
values <- mat[i,]
tt <-  t.test(values, mu = tmu)
l_pvalues <- c(l_pvalues, tt$p.value)
}
adj <- p.adjust(l_pvalues, "bonferroni")
num_selected <- which(adj <= trh, arr.ind = T)
num_selected
rm(list=ls())
load(file = "matrix.RData")
nrows <- dim(mat)[1]
ncols <- dim(mat)[2]
l_pvalues <- vector()
tmu <- 1e-05
trh <- 0.01
for(i in 1:nrows){
values <- mat[i,]
tt <-  t.test(values, mu = tmu)
l_pvalues <- c(l_pvalues, tt$p.value)
}
adj <- p.adjust(l_pvalues, "bonferroni")
#' createMask
#'
#' Run a t test on edges in order to choose which edges to select to.
#' Then create a mask.
rm(list=ls())
library(igraph)
source("./../statistics_test/ttest.R")
# ------------------------ Initialization --------------------------------------
pathInMatrix <- "./../../data/other/matrix_all_edges.RData"
pathIn_ex_graph <- "./../../data/graphs_integration/full_connected/Controls/CTRL_amore.graphml"
pathOut_mask <- "./../../data/other/t_test/mask_t_test.csv"
# load data
load(file = pathInMatrix)
nrows <- dim(mat)[1]
ncols <- dim(mat)[2]
l_pvalues <- vector()
tmu <- 1e-05
trh <- 0.01
# ------------------------ Running ---------------------------------------------
# sign test on each row (a row of mat contains all the values of an edge for all
# subjects)
for(i in 1:nrows){
values <- mat[i,]
tt <-  t.test(values, mu = tmu)
l_pvalues <- c(l_pvalues, tt$p.value)
}
adj <- p.adjust(l_pvalues, "bonferroni")
selected_idx <- which(adj <= trh, arr.ind = T)
# read example graph in order to get a list of edges
ge <- read.graph(pathIn_ex_graph, format="graphml")
list_edges <- get.edgelist(ge)
mask <- list_edges[selected_idx,]
# save
write.table(mask,file= pathOut_mask, sep="\t", col.names = F, row.names = F)
source('~/Tesi/project_integration_intersect_3groups/R/gen_t_test_dataset/driver_gen_all.R', echo=TRUE)
read.graph("./../../data/graphs_integration/t_test/Controls/CTRL_amore.graphml", format = "graphml")
g <- read.graph("./../../data/graphs_integration/t_test/Controls/CTRL_amore.graphml", format = "graphml")
is.connected(g, "strong")
is.connected(g, "wak")
is.connected(g, "weak")
g <- read.graph("./../../data/graphs_integration/borda_sw_004/Controls/CTRL_amore.graphml", format = "graphml")
is.connected(g, "weak")
is.connected(g, "strong")
source('~/Tesi/project_integration_intersect_3groups/R/gen_t_test_dataset/driver_gen_lists.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/gen_t_test_dataset/driver_gen_lists.R', echo=TRUE)

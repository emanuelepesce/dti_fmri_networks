library(igraph)
g <- read.graph("./../../data/graphs_integration/full_connected/Controls/CTRL_amore.graphml")
g <- read.graph("./../../data/graphs_integration/full_connected/Controls/CTRL_amore.graphml", format="graphml")
mask <- read.csv(file = "./../../data/other/borda/borda_mask_ws_cutting.csv")
mask <- as.matrix(mask)
mask
mask <- read.csv(file = "./../../data/other/borda/borda_mask_ws_cutting.csv", sep = "\t")
mask <- as.matrix(mask)
mask
mask <- read.csv(file = "./../../data/other/borda/borda_mask_ws_cutting.csv", sep = "\t")
mask
g <- read.graph("./../../data/graphs_integration/full_connected/Controls/CTRL_amore.graphml", format="graphml")
library(igraph)
g <- read.graph("./../../data/graphs_integration/full_connected/Controls/CTRL_amore.graphml", format="graphml")
mask <- read.csv(file = "./../../data/other/borda/borda_mask_ws_cutting.csv", sep = "\t")
mask <- as.matrix(mask)
mask
mask <- read.csv(file = "./../../data/other/borda/borda_mask_ws_cutting_num.csv", sep = "\t")
mask <- as.matrix(mask)
mask
e_list <- get.edgelist(g)
n_edges <- dim(e_list)[1]
m_edges <- dim(mask)[1]
E(g)
E(g)
g
set.edge.attribute(g, "toKeep", index = E(g), 0)
g
for(i in 1:dim(mask)[1]){
g[mask[i,1], mask[i,2], attr="toKeep"] = 1
}
g
E(g)$toKeep
g <- set.edge.attribute(g, "toKeep", index = E(g), 0)
for(i in 1:dim(mask)[1]){
g[mask[i,1], mask[i,2], attr="toKeep"] = 1
}
g
E(g)$toKeep
mask
E(g)$toKeep
i
mask[i,1]
mask[i,2]
g[90,51, attr = "toKeep"]
g[90,90, attr = "toKeep"]
g[90,89, attr = "toKeep"]
mask
get.edge(g, 1)
g1 <- g
delete.edges(g, 1)
get.edge(g, 1)
delete.edges(g, 1)
g1 <- delete.edges(g, 1)
g1
g
g1
get.edge(g1, 1)
for(i in ecount(g):1){
if(get.edge.attribute(g, "toKeep", i){
delete.edges(g, i)
}
}
for(i in ecount(g):1){
if(get.edge.attribute(g, "toKeep", i){
g <- delete.edges(g, i)
}
}
# remove
for(i in ecount(g):1){
if(get.edge.attribute(g, "toKeep", i)){
g <- delete.edges(g, i)
}
}
g
g <- read.graph("./../../data/graphs_integration/full_connected/Controls/CTRL_amore.graphml", format="graphml")
g <- set.edge.attribute(g, "toKeep", index = E(g), 0)
for(i in 1:dim(mask)[1]){
g[mask[i,1], mask[i,2], attr="toKeep"] <- 1
}
g
# remove
for(i in ecount(g):1){
if(get.edge.attribute(g, "toKeep", i) == 1){
g <- delete.edges(g, i)
}
}
g
g <- read.graph("./../../data/graphs_integration/full_connected/Controls/CTRL_amore.graphml", format="graphml")
mask <- read.csv(file = "./../../data/other/borda/borda_mask_ws_cutting_num.csv", sep = "\t")
mask <- as.matrix(mask)
g <- set.edge.attribute(g, "toKeep", index = E(g), 0)
for(i in 1:dim(mask)[1]){
g[mask[i,1], mask[i,2], attr="toKeep"] <- 1
}
# remove
for(i in ecount(g):1){
if(get.edge.attribute(g, "toKeep", i) == 0){
g <- delete.edges(g, i)
}
}
g
mask
g
View(mask)
View(mask)
f
g
remove.edge.attribute(g, "toKeep")
source("./apply_mask_borda.R", chdir = T)
gen_graphs_borda_sw(pathIn_Controls, pathIn_mask, pathOut)
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs_borda_ws/driver_gen_borda_sw_cutting_dataset.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs_borda_ws/driver_gen_borda_sw_cutting_dataset.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs_borda_ws/apply_mask_borda.R', echo=TRUE)
g <- read.graph("./../../data/graphs_integration/full_connected/Controls/CTRL_amore.graphml", format="graphml")
mask <- read.csv(file = "./../../data/other/borda/borda_mask_ws_cutting_num.csv", sep = "\t")
mask <- as.matrix(mask)
gm <- applyMask(g,mask)
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs_borda_ws/apply_mask_borda.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs_borda_ws/apply_mask_borda.R', echo=TRUE)
mask <- read.csv(file = "./../../data/other/borda/borda_mask_ws_cutting_num.csv", sep = "\t")
mask <- as.matrix(mask)
gm <- applyMask(g,mask)
gm <- applyMask(g,mask)
gm <- apply_mask(g,mask)
g <- read.graph("./../../data/graphs_integration/full_connected/Controls/CTRL_amore.graphml", format="graphml")
gm <- apply_mask(g,mask)
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs_borda_ws/driver_gen_borda_sw_cutting_dataset.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs_borda_ws/driver_gen_borda_sw_cutting_dataset.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs_borda_ws/apply_mask_borda.R', echo=TRUE)
debugSource('~/Tesi/project_integration_intersect_3groups/R/gen_graphs_borda_ws/apply_mask_borda.R', echo=TRUE)
mask <- read.csv(file = pathMask, sep = "\t")
pathMask
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs_borda_ws/driver_gen_borda_sw_cutting_dataset.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs_borda_ws/driver_gen_borda_sw_cutting_dataset.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs_borda_ws/driver_gen_borda_sw_cutting_dataset.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs_borda_ws/apply_mask_borda.R', echo=TRUE)
debugSource('~/Tesi/project_integration_intersect_3groups/R/gen_graphs_borda_ws/apply_mask_borda.R', echo=TRUE)
mask <- read.csv(file = pathMask, sep = "\t")
mask <- as.matrix(mask)
# take all files in pathIn which have the right format
patt <- paste("*.", form, sep = "")
files <- list.files(path = pathIn, pattern = patt)
p_file <- paste(pathIn, files[1], sep = "")
g <- read.graph(p_file, format = form)
g
gm <- apply_mask(g,mask)
p_file
form
g <- read.graph("./../../data/graphs_integration/full_connected/Controls/CTRL_amore.graphml", format="graphml")
mask <- read.csv(file = "./../../data/other/borda/borda_mask_ws_cutting_num.csv", sep = "\t")
mask <- as.matrix(mask)
gm <- apply_mask(g,mask)
mask
gen_graphs_borda_sw(pathIn_Controls, pathOut, pathIn_mask)
mask <- read.csv(file = pathMask, sep = "\t")
mask <- as.matrix(mask)
mask
debugSource('~/Tesi/project_integration_intersect_3groups/R/gen_graphs_borda_ws/apply_mask_borda.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs_borda_ws/driver_gen_borda_sw_cutting_dataset.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs_borda_ws/driver_gen_borda_dataset_controls.R', echo=TRUE)
p <- proc.time()
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs_borda_ws/driver_borda_sw_cutting_complete.R', echo=TRUE)
read.graph(./../../data/graphs_integration/full_connected/SLA3/SLA3_difronzo.graphml)
read.graph("./../../data/graphs_integration/full_connected/SLA3/SLA3_difronzo.graphml")
read.graph("./../../data/graphs_integration/full_connected/SLA3/SLA3_difronzo.graphml", format = "graphml")
g <- read.graph("./../../data/graphs_integration/full_connected/SLA3/SLA3_difronzo.graphml", format = "graphml")
g <- read.graph("./../../data/graphs_integration/borda_sw/SLA3/SLA3_difronzo.graphml", format = "graphml")
g
E(g)$stong
E(g)$strong
E(g)$strong == 1
sum(E(g)$strong == 1)
2170 - 441
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs_borda_ws/extract_mask_004.R', echo=TRUE)
pathMask_borda_ws_cutting_info <- "./../../data/other/borda/threshold_0dot04/borda_mask_ws_cutting_info.csv"
pathMask_borda_ws_cutting <- paste(pathOut, "borda_mask_ws_cutting.csv", sep = "")
pathMask_borda_ws_cutting_num <- paste(pathOut, "borda_mask_ws_cutting_num.csv", sep = "")
pathMask_borda_ws_cutting_info <- paste(pathOut, "borda_mask_ws_cutting_info.csv", sep = "")
path_results_objects <- paste(pathOut, "borda_sw_cut_objects.RData", sep = "")
path_results_objects
path_results_cutting <- "./../../data/other/borda/threshold_0dot04/borda_sw_cut_objects.RData"
path_results_cutting <- "./../../data/other/borda/threshold_0dot04/borda_sw_cut_objects.RData"
path_results_objects
source('~/Tesi/project_integration_intersect_3groups/R/borda_sw_mask/driver_create_borda_mask.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs_borda_ws/driver_borda_sw_cutting_complete.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs_borda_ws/driver_borda_sw_cutting_complete.R', echo=TRUE)
pathIn_mask <- "./../../data/other/borda/threshold_0dot04/borda_mask_ws_cutting_num.csv"
source('~/.active-rstudio-document', echo=TRUE)
#' driver_gen_borda_ws_cutting_dataset
#'
#' Generate borda ws cutting dataset complete (controls, sla2 and sla3)
#'
#' Author: Emanuele Pesce
ptm <- proc.time()
pathIn_mask <- "./../../data/other/borda/threshold_0dot04/borda_mask_ws_cutting_num.csv"
source("./driver_gen_borda_dataset_controls.R")
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs_borda_ws/driver_gen_borda_dataset_controls.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs_borda_ws/driver_borda_sw_cutting_complete.R', echo=TRUE)
pathOut
paste(pathOut, "SLA3_ambrosino_p.graphm", sep="")
a <- paste(pathOut, "SLA3_ambrosino_p.graphm", sep="")
g <- read.graph(a, format= "graphml")
paste(pathOut, "SLA3_ambrosino_p.graphml", sep="")
g <- read.graph(a, format= "graphml")
a <- paste(pathOut, "SLA3_ambrosino_p.graphml", sep="")
a
g <- read.graph(a, format= "graphml")
g
g
V(id)
V(g)$id
E(g)
E(g)
mask <- read.csv(file = pathMask, sep = "\t")
pathIn_mask
mask <- read.csv(file = pathIn_mask, sep = "\t")
mask
mask
mask[1:5,]
mask <- read.csv(file = pathIn_mask, sep = "\t", colnames=F)
?csv.read
?read.csv
mask <- read.csv(file = pathIn_mask, sep = "\t", col.names=F)
?read.csv
mask <- read.csv(file = pathIn_mask, sep = "\t", header=F)
mask
mask[1:5,]
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs_borda_ws/driver_gen_borda_dataset_SLA3.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs_borda_ws/driver_gen_borda_dataset_SLA3.R', echo=TRUE)
paste(pathOut, "SLA3_ambrosino_p.graphml", sep="")
g <- read.graph(a, format= "graphml")
a <- paste(pathOut, "SLA3_ambrosino_p.graphml", sep="")
g <- read.graph(a, format= "graphml")
g
E(g)
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs_borda_ws/driver_borda_sw_cutting_complete.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs_borda_ws/driver_borda_sw_cutting_complete.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs_ttest/driver_ttest_sw_cutting_complete.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs_ttest/driver_ttest_sw_cutting_complete.R', echo=TRUE)
#' driver_Controls
#'
#' Attach 'strong' label to all graph in a directory.
#'
#' If strong == 1 then the edge belongs to strong ties set.
#' This file use the object borda_sw_cut_objects.RData which cointains the
#' results of SW cutting procedure, done when mask has been extracted.
#'
#' Author: Emanuele Pesce
rm(list=ls())
source("./../../gen_graphs/sw_labels/attachLabelsSW.R", chdir = T)
# -------------------------- Inititialization ----------------------------------
verbose = 1
if(verbose > 0){
print("Initialization..")
}
path_borda_controls <- "./../../../data/other/borda/borda_matrix_controls.txt"
path_borda_sla2 <- "./../../../data/other/borda/borda_matrix_SLA2.txt.txt"
path_borda_sla3 <- "./../../../data/other/borda/borda_matrix_SLA3.txt"
pathIn_data <- "./../../../data/other/t_test_005/t_test_sw_cut_objects.RData"
pathTarget <- "./../../../data/graphs_integration/t_test_005/Controls"
# -------------------------- Running -------------------------------------------
ptm <- proc.time()
# get borda matrix
# g_controls <- i_adjacencyFromFile(path_borda_controls)
# g_sla2 <- i_adjacencyFromFile(path_borda_sla2)
# g_sla3 <- i_adjacencyFromFile(path_borda_sla3)
# load result objects of cutting procedure in order to retrieve the correct set
# of strong ties
load(pathIn_data)
# get labels

source("./../utils/graphUtils.R", chdir = T)
rm(list = ls())
source("./../utils/graphUtils.R", chdir = T)
verbose = 1
if(verbose > 0){
print("Initialization..")
}
pathBordaControls <- "./../../data/other/borda/borda_matrix_controls.txt"
pathBordaSLA2 <- "./../../data/other/borda/borda_matrix_SLA2.txt"
pathBordaSLA3 <- "./../../data/other/borda/borda_matrix_SLA3.txt"
ptm <- proc.time()
if(verbose > 0){
print("Running..")
}
# import graphs
g_Controls <- i_adjacencyFromFile(pathBordaControls)
g_SLA2 <- i_adjacencyFromFile(pathBordaSLA2)
g_SLA3 <- i_adjacencyFromFile(pathBordaSLA3)
load("./../borda_sw_mask/driver_create_borda_mask.RData")
maskU
new_mask
dim(maskU[1])
dim(maskU)[1]
new_mask <- matrix(nrow = dim(maskU)[1], ncol = 2)
for(i in 1:dim(maskU)[1]){
tmp <- gsub("V","", maskU[i, 1])
new_mask[i,1] <- as.integer(tmp)
tmp <- gsub("V","", maskU[i, 2])
new_mask[i,2] <- as.integer(tmp)
}
new_mask
total_edges <- dim(maskU)[1]
lab_controls <- getLabels(r_Controls)
lab_sla2 <- getLabels(r_SLA2)
lab_sla3 <- getLabels(r_SLA3)
source("./../gen_graphs/sw_labels/attachLabelsSW.R", chdir = T)
lab_controls <- getLabels(r_Controls)
lab_sla2 <- getLabels(r_SLA2)
lab_sla3 <- getLabels(r_SLA3)
g <- make_full_graph(90, TRUE, TRUE)
g <- attachLabels(g, label1, set = TRUE)
g <- attachLabels(g, label2, set = FALSE)
g <- attachLabels(g, label3, set = FALSE)
g <- attachLabels(g, lab_controls, set = TRUE)
g <- attachLabels(g, lab_sla2, set = FALSE)
g <- attachLabels(g, lab_sla3, set = FALSE)
g
E(g)$strong
E(g)$strong == 1
sum(E(g)$strong == 1)
strong_edges <- sum(E(g)$strong == 1)
weak_edges <- total_edges - strong_edges
weak_edges
v <- as.vector()
v <- as.vector(0)
v[1] <- 1
v
v[2] <- 1
v
v[3] <- 1
v
total_edges <- as.vector(1)
?sequence
?seq
thresholds <- sequence(0.4, 0.5, 0.1)
thresholds <- seq(0.4, 0.5, 0.1)
thresholds
source('~/Tesi/project_integration_intersect_3groups/R/exp_threshold_borda_dataset/exp_threshold_borda_sw.R', echo=TRUE)
dim(thresholds)
length(thresholds)
source('~/Tesi/project_integration_intersect_3groups/R/exp_threshold_borda_dataset/exp_threshold_borda_sw.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/exp_threshold_borda_dataset/exp_threshold_borda_sw.R', echo=TRUE)
r_Controls
mask1
r_SLA3
residual_Controls <- r_Controls$residualGraph
residual_SLA2 <- r_SLA2$residualGraph
residual_SLA3 <- r_SLA3$residualGraph
mask1 <- unionMask(residual_Controls, residual_SLA2)
residual_Controls
residualSLA2
residual_SLA2
load("./../borda_sw_mask/driver_create_borda_mask.RData")
residual_Controls
mask1 <- unionMask(residual_Controls, residual_SLA2)
thresholds
debugSource('~/Tesi/project_integration_intersect_3groups/R/exp_threshold_borda_dataset/exp_threshold_borda_sw.R', echo=TRUE)
save("tmp1.RData")
?save
save.image("tmp1.RData")
mask1 <- unionMask(residual_Controls, residual_SLA2)
tr
mask1
mask1
r_Controls
residual_Controls
mask2 <- unionMask(residual_Controls, residual_SLA3)
load("tmp1.RData")
residual_Controls
residual_Controls
r_Controls
residual_SLA2
load("tmp1.RData")
mask1 <- unionMask(residual_Controls, residual_SLA2)
source("./../utils/graphUtils.R", chdir = T)
source("./../strong_weak_ties_cutting/sw_cutting.R", chdir = T)
source("./../gen_graphs/sw_labels/attachLabelsSW.R", chdir = T)
source("./../borda_sw_mask/borda_extracting_mask.R", chdir = T)
mask1 <- unionMask(residual_Controls, residual_SLA2)
mask1
residual_Controls
r_Controls
g_Controls
debugSource('~/Tesi/project_integration_intersect_3groups/R/exp_threshold_borda_dataset/exp_threshold_borda_sw.R', echo=TRUE)
mask1 <- unionMask(residual_Controls, residual_SLA2)
mask1
mask2 <- unionMask(residual_Controls, residual_SLA3)
mask2 <- unionMask(residual_Controls, residual_SLA3)
mask1 <- unionMask(residual_Controls, residual_SLA2)
mask2 <- unionMask(residual_Controls, residual_SLA3)
mask1
mask2
mask1
mask2
mask1
maskU <- rbind(mask1, mask2)
maskU <- unique(maskU)
maskU
# numeric mask
new_mask <- matrix(nrow = dim(maskU)[1], ncol = 2)
for(i in 1:dim(maskU)[1]){
tmp <- gsub("V","", maskU[i, 1])
new_mask[i,1] <- as.integer(tmp)
tmp <- gsub("V","", maskU[i, 2])
new_mask[i,2] <- as.integer(tmp)
}
maskU
load("tmp1.RData")
source("./../utils/graphUtils.R", chdir = T)
source("./../strong_weak_ties_cutting/sw_cutting.R", chdir = T)
source("./../gen_graphs/sw_labels/attachLabelsSW.R", chdir = T)
source("./../borda_sw_mask/borda_extracting_mask.R", chdir = T)
+
mask1 <- unionMask(residual_Controls, residual_SLA2)
mask2 <- unionMask(residual_Controls, residual_SLA3)
# union
maskU <- rbind(mask1, mask2)
maskU <- unique(maskU)
residual_Controls
residual_SLA2
mask1 <- unionMask(residual_Controls, residual_SLA2)
mask2 <- unionMask(residual_Controls, residual_SLA3)
maskU <- rbind(mask1, mask2)
maskU <- unique(maskU)
maskU
new_mask <- matrix(nrow = dim(maskU)[1], ncol = 2)
for(i in 1:dim(maskU)[1]){
tmp <- gsub("V","", maskU[i, 1])
new_mask[i,1] <- as.integer(tmp)
tmp <- gsub("V","", maskU[i, 2])
new_mask[i,2] <- as.integer(tmp)
}
total_edges[j] <- dim(maskU)[1]
g <- make_full_graph(90, TRUE, TRUE)
lab_controls <- getLabels(r_Controls)
lab_sla2 <- getLabels(r_SLA2)
lab_sla3 <- getLabels(r_SLA3)
g <- attachLabels(g, lab_controls, set = TRUE)
g <- attachLabels(g, lab_sla2, set = FALSE)
g <- attachLabels(g, lab_sla3, set = FALSE)
strong_edges[j] <- sum(E(g)$strong == 1)
weak_edges[j] <- total_edges[j] - strong_edges[j]
save.image("iteration.R")
r_Controls <- sw_cutting(g_Controls, threshold = 0.02, flow = 0)
source('~/Tesi/project_integration_intersect_3groups/R/exp_threshold_borda_dataset/exp_threshold_borda_sw.R', echo=TRUE)
total_edges
load("iteration.R")
total_edges
j
library("parallel")
library("foreach")
library("doParallel")
cl <- makeCluster(detectCores() - 1)
registerDoParallel(cl, cores = detectCores() - 1)
foreach(i=1:3) %dopar% sqrt(i)
data <- foreach(i=1:3) %dopar% sqrt(i)
data
data <- foreach(i=1:6) %dopar% sqrt(i)
data
results = data.frame(size=c(), type=c(), time=c())
results
results = data.frame(size=1, type=c(), time=c())
results = data.frame(a=c())
results$a
results$b
data.frame(threshold = tr, )
data.frame(threshold = tr)
data.frame(threshold = tr, total = total_edges, strong = strong_edges, weak= weak_edges)
data.frame(threshold = tr, total = total_edges, strong = data - strong_edges, weak= weak_edges)
data.frame(threshold = tr, total = total_edges, strong = strong_edges, weak= weak_edges)
a <- data.frame(threshold = tr, total = total_edges, strong = strong_edges, weak= weak_edges)
rbcind(a,a)
rbind(a,a)
info_edge <- data.frame(threshold = tr, total = total_edges, strong =
strong_edges, weak= weak_edges)
info_edge
> data <- foreach(i=1:3, .combine = rbind) %dopar% sqrt(i)
> data <- foreach(i=1:3, .combine = rbind) %dopar% sqrt(i)
length(thresholds)
source('~/Tesi/project_integration_intersect_3groups/R/exp_threshold_borda_dataset/exp_threshold_borda_sw_par.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/exp_threshold_borda_dataset/exp_threshold_borda_sw_par.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/exp_threshold_borda_dataset/exp_threshold_borda_sw_par.R', echo=TRUE)
graph.adjacency
source('~/Tesi/project_integration_intersect_3groups/R/exp_threshold_borda_dataset/exp_threshold_borda_sw_par.R', echo=TRUE)
cl
source('~/Tesi/project_integration_intersect_3groups/R/exp_threshold_borda_dataset/exp_threshold_borda_sw_par.R', echo=TRUE)
threshold[1]
thresholds[1]
thresholds[2]
source('~/Tesi/project_integration_intersect_3groups/R/exp_threshold_borda_dataset/exp_threshold_borda_sw_par.R', echo=TRUE)
debugSource('~/Tesi/project_integration_intersect_3groups/R/exp_threshold_borda_dataset/exp_threshold_borda_sw_par.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/exp_threshold_borda_dataset/exp_threshold_borda_sw_par.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/exp_threshold_borda_dataset/exp_threshold_borda_sw_par.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/exp_threshold_borda_dataset/exp_threshold_borda_sw_par.R', echo=TRUE)
warnings()
source('~/Tesi/project_integration_intersect_3groups/R/exp_threshold_borda_dataset/exp_threshold_borda_sw_par.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/exp_threshold_borda_dataset/exp_threshold_borda_sw_par.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/exp_threshold_borda_dataset/exp_threshold_borda_sw_par.R', echo=TRUE)
cl
source('~/Tesi/project_integration_intersect_3groups/R/exp_threshold_borda_dataset/exp_threshold_borda_sw.R', echo=TRUE)
residualControls
residual_Controls
source('~/Tesi/project_integration_intersect_3groups/R/exp_threshold_borda_dataset/exp_threshold_borda_sw_par_try.R', echo=TRUE)
stopCluster(cl)
source('~/Tesi/project_integration_intersect_3groups/R/exp_threshold_borda_dataset/exp_threshold_borda_sw_par_try.R', echo=TRUE)
stopCluster(cl)
source('~/Tesi/project_integration_intersect_3groups/R/exp_threshold_borda_dataset/exp_threshold_borda_sw_par_try.R', echo=TRUE)
rm(list = ls())
library("parallel")
library("foreach")
library("doParallel")
source("./../utils/graphUtils.R", chdir = T)
source("./../strong_weak_ties_cutting/sw_cutting.R", chdir = T)
source("./../gen_graphs/sw_labels/attachLabelsSW.R", chdir = T)
source("./../borda_sw_mask/borda_extracting_mask.R", chdir = T)
# -------------------------- Inititialization ----------------------------------
verbose = 1
if(verbose > 0){
print("Initialization..")
}
pathBordaControls <- "./../../data/other/borda/borda_matrix_controls.txt"
pathBordaSLA2 <- "./../../data/other/borda/borda_matrix_SLA2.txt"
pathBordaSLA3 <- "./../../data/other/borda/borda_matrix_SLA3.txt"
thresholds <- seq(0.02, 0.04, 0.01)
maxIter <- length(thresholds)
# -------------------------- Running -------------------------------------------
calculateEdgesNumber <- function(tr){
total_edges <- as.vector(1)
strong_edges <- as.vector(1)
weak_edges <- as.vector(1)
# import graphs
g_Controls <- i_adjacencyFromFile(pathBordaControls)
g_SLA2 <- i_adjacencyFromFile(pathBordaSLA2)
g_SLA3 <- i_adjacencyFromFile(pathBordaSLA3)
print(tr)
# compute residuals
r_Controls <- sw_cutting(g_Controls, threshold = tr, flow = 0)
if(verbose > 0){
print("r_Controls complete")
}
residual_Controls <- r_Controls$residualGraph
info_edge <- data.frame(threshold = tr, total = residualControls)
return(info_edge)
}
# -------------------------- Running -------------------------------------------
ptm <- proc.time()
if(verbose > 0){
print("Running..")
}
cl <- makeCluster(detectCores() - 1)
registerDoParallel(cl, cores = detectCores() - 1)
cl
1
cl <- makeCluster(3)
cl
source('~/Tesi/project_integration_intersect_3groups/R/exp_threshold_borda_dataset/exp_threshold_borda_sw_par_try.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/exp_threshold_borda_dataset/exp_threshold_borda_sw_par_try.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/exp_threshold_borda_dataset/exp_threshold_borda_sw_par_try.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/exp_threshold_borda_dataset/exp_threshold_borda_sw_par_try.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/exp_threshold_borda_dataset/exp_threshold_borda_sw_par_try.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/exp_threshold_borda_dataset/exp_threshold_borda_sw_par_try.R', echo=TRUE)
?clusterExport
source('~/Tesi/project_integration_intersect_3groups/R/exp_threshold_borda_dataset/exp_threshold_borda_sw_par_try.R', echo=TRUE)
clusterExport(cl, ls())
data <- clusterApply(cl, thresholds, calculateEdgesNumber)
source('~/Tesi/project_integration_intersect_3groups/R/exp_threshold_borda_dataset/exp_threshold_borda_sw_par_try.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/exp_threshold_borda_dataset/exp_threshold_borda_sw_par_try.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/exp_threshold_borda_dataset/exp_threshold_borda_sw_par_try.R', echo=TRUE)
load("iteration.RData")
residual_Controls
info_edge <- data.frame(threshold = tr, total = residual_Controls)
info_edge <- list(threshold = tr, total = residual_Controls)
info_edge
rbind(info_edge, info_edge)
mask1 <- unionMask(residual_Controls, residual_Controls)
maskU <- unique(mask1)
total_edges <- dim(maskU)[1]
print(total_edges)
info_edge <- data.frame(threshold = tr, total = total_edges)
rbind(info_edge, info_edge)
source('~/Tesi/project_integration_intersect_3groups/R/exp_threshold_borda_dataset/exp_threshold_borda_sw_par_try.R', echo=TRUE)
data
source('~/Tesi/project_integration_intersect_3groups/R/exp_threshold_borda_dataset/copy of exp_threshold_borda_sw_par_good.R', echo=TRUE)
thresholds <- seq(0.02, 0.03, 0.01)
thresholds <- seq(0.02, 0.03, 0.01)
thresholds
source('~/Tesi/project_integration_intersect_3groups/R/exp_threshold_borda_dataset/copy of exp_threshold_borda_sw_par_good.R', echo=TRUE)
s <- 2
cl <- makeCluster(detectCores() - s)
registerDoParallel(cl, cores = detectCores() - s)
cl

source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs/prova.R', echo=TRUE)
g
V(g)$name
V(g)
as_edgelist(g, names = TRUE)
as_edgelist(g, names = FALSE)
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs/prova.R', echo=TRUE)
g
g <- make_full_graph(90, TRUE, TRUE)
g
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs/attachStructural.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs/attachStructural.R', echo=TRUE)
getMatrixFromFile("./../../data/structural/naive/Controls/CTRL_amore.txt")
m <- getMatrixFromFile("./../../data/structural/naive/Controls/CTRL_amore.txt")
m
dim(m)
m[1,1]
g <- make_full_graph(90, TRUE, TRUE)
dim(m)
?identical
as.integer(90)
as.integer(90,90)
as.integer(c(90,90))
?if
()
?if
nnodes(g)
nodes(g)
set.graph.attribute(g, "dti")
set.graph.attribute(g, "dti", 0)
set.edge.attribute(g, name, index=E(g), 0)
set.edge.attribute(g, "dti", index=E(g), 0)
E(g)$dti
g$dti
V(g)$dti
E(g)
edge.attributes(g)
g
g <- set.edge.attribute(g, "dti", index=E(g), 0)
g
edge.attributes(g)
E(g)$dti
get.edge.ids
get.edge.ids()
get.edge.ids(g)
E(g)
E(g)[1]
get.edgelist(g, names=FALSE)
g[1,1]
g[1,2]
g[1,3]
g[1,1]
g[1,1, attr="dti"] <- 5
g
E(g)$dti
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs/attachStructural.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs/driver_attachStructural.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
gr
E(g)$dti
E(gr)$dti
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs/driver_attachStructural.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs/driver_attachStructural.R', echo=TRUE)
ei <- get.edge.ids(g, c(1,2))
ei
set.edge.attribute(graph, name, index=1, 1000)
set.edge.attribute(g, "dti", index=1, 1000)
set.edge.attribute(g, "dti", index=c(1,1), 1000)
ei <- get.edge.ids(g, c(1,2))
ei
set.edge.attribute(g, "dti", index=c(1,2), 1000)
ei <- get.edge.ids(g, c(1,2))
ei
g[1,2, attr="dti"]
gr[1,2, attr="dti"]
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs/driver_attachStructural.R', echo=TRUE)
get.edgelist(gr)
matrix(1:5, 2, 3)
matrix(1:6, 2, 3)
a <- matrix(1:6, 2, 3)
rbind(a)
set.edge.attribute(gr, name = "dti", index = 1, value = 777)
gr[1,2]
gr[1,1]
gr[1,1]$weight
gr[1,1]$dti
gr[1,1,attr="dti"]
gr <-set.edge.attribute(gr, name = "dti", index = 1, value = 777)
gr[1,1,attr="dti"]
gr[1,2, attr="dti"] <- 888
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs/attachStructural.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs/driver_attachStructural.R', echo=TRUE)
E(gr)$dti
g[1,2]
g[1,2, attr="dti"]
gr[1,2, attr="dti"]
gr[1,1, attr="dti"]
gr[1,50, attr="dti"]
gr[50,1, attr="dti"]
gr[50,90, attr="dti"]
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs/driver_attachStructural.R', echo=TRUE)
gr
m
m <- getMatrixFromFile("./../../data/structural/naive/Controls/CTRL_amore.txt")
m
m <- getMatrixFromFile("./../../data/structural/naive/Controls/CTRL_amore.txt")
source("./attachStructural.R")
source("./attachFunctional.R")
m <- getMatrixFromFile("./../../data/structural/naive/Controls/CTRL_amore.txt")
m
m <- getMatrixFromFile("./../../data/functional/naive/Controls/CTRL_amore.txt", sep=",")
m
m <- getMatrixFromFile("./../../data/functional/naive/Controls/CTRL_amore.txt", sep=",")
g <- make_full_graph(90, TRUE, TRUE)
gr <- attachFmriToGraph(g, m)
gr
E(gr)$fmri
gr[50,90, attr="fmr"]
gr[50,90, attr="fmri"]
gr[50,1, attr="fmri"]
gr[1,1, attr="fmri"]
gr[1,2, attr="fmri"]
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs/driver_attachStructural.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs/driver_attachStructural.R', echo=TRUE)
g
path_names <- "./../../data/utils/aalLABELS.txt"
m <- read.table(path_names, header=FALSE)
labels <- as.matrix(m)
labels
labels
dim(labels)
dim(labels)[1]
length(labels)
library(igraph)
source("./attachStructural.R")
source("./attachFunctional.R")
source("./attachNames.R")
g <- attachRoiNames(roiNames)
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs/driver_attachStructural.R', echo=TRUE)
g
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs/driver_attachStructural.R', echo=TRUE)
g
g <- attachRoiNames(g, roiNames)
source("./attachNames.R")
g <- attachRoiNames(g, roiNames)
g
V(g)$roiName
path_names <- "./../../data/utils/aalCOG.txt"
m <- read.table(path_names, header=FALSE)
labels <- as.matrix(m)
if ( !identical(dim(labels), as.integer(c(90,90,90))) ){
return(-1)
}
identical(dim(labels), as.integer(c(90,90,90))
)
dim(labels)
labels
identical(dim(labels), as.integer(c(90,3))
)
source("./attachCoordinates.R")
path_names <- "./../../data/utils/aalCOG.txt"
m <- read.table(path_names, header=FALSE)
labels <- as.matrix(m)
attachRoiNames(g, coordinates = coords)
path_names <- "./../../data/utils/aalCOG.txt"
m <- read.table(path_names, header=FALSE)
coords <- as.matrix(m)
attachRoiNames(g, coordinates = coords)
source("./attachCoordinates.R")
path_names <- "./../../data/utils/aalCOG.txt"
m <- read.table(path_names, header=FALSE)
coords <- as.matrix(m)
attachRoiNames(g, coordinates = coords)
g <- attachRoiNames(g, coordinates = coords)
g
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs/driver_attachStructural.R', echo=TRUE)
g <- attachRoiCoordinates(g, coordinates = coords)
source("./attachCoordinates.R")
g <- attachRoiCoordinates(g, coordinates = coords)
g <- attachCoordinates(g, coordinates = coords)
g
g <- make_full_graph(90, TRUE, TRUE)
path_names <- "./../../data/utils/aalLABELS.txt"
m <- read.table(path_names, header=FALSE)
roiNames <- as.matrix(m)
g <- attachRoiNames(g, roiNames)
g
rm(list = ls())
source("./attachStructural.R")
source("./attachFunctional.R")
source("./attachNames.R")
source("./attachCoordinates.R")
g <- make_full_graph(90, TRUE, TRUE)
path_names <- "./../../data/utils/aalLABELS.txt"
m <- read.table(path_names, header=FALSE)
roiNames <- as.matrix(m)
g <- attachRoiNames(g, roiNames)
g
path_names <- "./../../data/utils/aalCOG.txt"
m <- read.table(path_names, header=FALSE)
coords <- as.matrix(m)
g <- attachCoordinates(g, coordinates = coords)
g
rm(list = ls())
source("./attachStructural.R")
source("./attachFunctional.R")
source("./attachNames.R")
source("./attachCoordinates.R")
g <- make_full_graph(90, TRUE, TRUE)
path_names <- "./../../data/utils/aalLABELS.txt"
m <- read.table(path_names, header=FALSE)
roiNames <- as.matrix(m)
g <- attachRoiNames(g, roiNames)
path_names <- "./../../data/utils/aalCOG.txt"
m <- read.table(path_names, header=FALSE)
coords <- as.matrix(m)
g <- attachCoordinates(g, coordinates = coords)
g
V(g)$cx
V(g)$cy
V(g)$cz
rm(list = ls())
source("./attachStructural.R")
source("./attachFunctional.R")
source("./attachNames.R")
source("./attachCoordinates.R")
g <- make_full_graph(90, TRUE, TRUE)
path_names <- "./../../data/utils/aalCOG.txt"
m <- read.table(path_names, header=FALSE)
coords <- as.matrix(m)
g <- attachCoordinates(g, coordinates = coords)
V(g)$cz
V(g)$cy
V(g)$cz
V(g)$cx
V(g)$cy
V(g)$cz
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs/driver_attachStructural.R', echo=TRUE)
g
rm(list = ls())
source("./attachStructural.R")
source("./attachFunctional.R")
source("./attachNames.R")
source("./attachCoordinates.R")
g <- make_full_graph(90, TRUE, TRUE)
m <- getMatrixFromFile("./../../data/structural/naive/Controls/CTRL_amore.txt")
g <- attachDtiInverseToGraph(g, m)
g
E(g)$dti_inverse
rm(list = ls())
source("./attachStructural.R")
source("./attachFunctional.R")
source("./attachNames.R")
source("./attachCoordinates.R")
g <- make_full_graph(90, TRUE, TRUE)
#name of the graph
m <- getMatrixFromFile("./../../data/structural/naive/Controls/CTRL_amore.txt")
g <- attachDtiToGraph(g, m)
m <- getMatrixFromFile("./../../data/structural/naive/Controls/CTRL_amore.txt")
g <- attachDtiInverseToGraph(g, m)
rm(list = ls())
source("./attachStructural.R")
source("./attachFunctional.R")
source("./attachNames.R")
source("./attachCoordinates.R")
g <- make_full_graph(90, TRUE, TRUE)
m <- getMatrixFromFile("./../../data/structural/naive/Controls/CTRL_amore.txt")
g <- attachDtiToGraph(g, m)
m <- getMatrixFromFile("./../../data/structural/naive/Controls/CTRL_amore.txt")
g <- attachDtiInverseToGraph(g, m)
rm(list = ls())
source("./attachStructural.R")
source("./attachFunctional.R")
source("./attachNames.R")
source("./attachCoordinates.R")
g <- make_full_graph(90, TRUE, TRUE)
#name of the graph
m <- getMatrixFromFile("./../../data/structural/naive/Controls/CTRL_amore.txt")
g <- attachDtiToGraph(g, m)
m <- getMatrixFromFile("./../../data/structural/naive/Controls/CTRL_amore.txt")
g <- attachDtiInverseToGraph(g, m)
source("./attachStructural.R")
source("./attachFunctional.R")
rm(list = ls())
source("./attachStructural.R")
source("./attachFunctional.R")
source("./attachNames.R")
source("./attachCoordinates.R")
g <- make_full_graph(90, TRUE, TRUE)
#name of the graph
m <- getMatrixFromFile("./../../data/structural/naive/Controls/CTRL_amore.txt")
g <- attachDtiToGraph(g, m)
m <- getMatrixFromFile("./../../data/structural/naive/Controls/CTRL_amore.txt")
g <- attachDtiInverseToGraph(g, m)
g
E(g)$dti_inverse
E(g)$dti
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs/driver_attachStructural.R', echo=TRUE)
g
source("attachCoordinates.R")
source("attachCoordinates.R")
source('~/Tesi/project_integration_intersect_3groups/R/gen_graphs/example.R', echo=TRUE)
library(igraph)
g <- read.graph("./../../data/graphs_integration/borda_sw_004/")
g <- read.graph("./../../data/graphs_integration/borda_sw_004/SLA2/SLA2_antonucci.graphml", format = "graphml")
g
g
sum( E(g)$strong == 1)
sum( E(g)$fmri == 1)
E(g)$fmri
g <- read.graph("./../../data/graphs_integration/borda_sw_004/SLA2/SLA2_calabrese.graphml", format = "graphml")
E(g)$fmri
g <- read.graph("./../../data/graphs_integration/borda_sw_004/Controls/CTRL_denapoli.graphml", format = "graphml")
E(g)$fmri
sum( E(g)$fmri == 1)
sum( E(g)$strong == 1)
g
g <- read.graph("./../../data/graphs_integration/borda_sw_004/SLA3/SLA3_dangelo.graphml", format = "graphml")
sum( E(g)$strong == 1)
E(g)$fmri

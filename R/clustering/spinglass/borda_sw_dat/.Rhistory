source('~/Tesi/project_integration_intersect_3groups/R/clustering/spectral/borda_sw_dat/driver_controls.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/clustering/spectral/borda_sw_dat/driver_sla2.R', echo=TRUE)
st.files(path = pathIn_graphs, pattern = patt)
st.files(path = pathIn_graphs, pattern = "*")
list.files(path = pathIn_graphs, pattern = "*")
list.files(path = pathIn_graphs, pattern = "*")
list.files(path = pathIn_graphs, pattern = "*")
list.files(path = pathIn_graphs, pattern = "*")
list.files(path = pathIn_graphs, pattern = "*")
list.files(path = pathIn_graphs, pattern = "*")
list.files(path = pathIn_graphs, pattern = "a")
list.files(path = pathIn_graphs, pattern = "a")
list.files(path = pathIn_graphs, pattern = "a")
list.files(path = pathIn_graphs, pattern = "a-")
a <- list.files(path = pathIn_graphs, pattern = "a-")
a[ยน]
a[1]
is.null(a[1])
is.na(a[1])
?is.na()
?is.na
?continue
source('~/Tesi/project_integration_intersect_3groups/R/clustering/spectral/borda_sw_dat/driver_sla2.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/clustering/spectral/borda_sw_dat/driver_sla3.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/clustering/spectral/borda_sw_dat/driver_sla3.R', echo=TRUE)
a <- list.files(path = pathIn_graphs, pattern = "*")
a
pathIn_graphs
source('~/Tesi/project_integration_intersect_3groups/R/clustering/spectral/borda_sw_dat/driver_sla3.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/clustering/spectral/borda_sw_dat/driver_controls.R', echo=TRUE)
testit <- function() warning("testit")
testit() ## shows call
testit <- function() warning("problem in testit", call. = FALSE)
testit() ## no call
suppressWarnings(warning("testit"))
source('~/Tesi/project_integration_intersect_3groups/R/clustering/spectral/borda_sw_dat/driver_controls.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/clustering/spectral/borda_sw_dat/driver_controls.R', echo=TRUE)
form = "graphml"
patt = paste("*.", form, sep = "") # pattern to match
files <- list.files(path = pathIn, pattern = patt) # take all files in pathIn
patt = paste("*.", form, sep = "") # pattern to match
files <- list.files(path = pathIn_graphs, pattern = patt) # take all files in pathIn
files
files
patt = paste("*.", form, sep = "") # pattern to match
files <- list.files(path = pathIn_graphs, pattern = patt) # take all files in pathIn
patt = paste("*.", form, sep = "") # pattern to match
files <- list.files(path = pathIn_graphs, pattern = patt) # take all files in pathIn
patt = paste("*.", form, sep = "") # pattern to match
files <- list.files(path = pathIn_graphs, pattern = patt) # take all files in pathIn
patt = paste("*.", form, sep = "") # pattern to match
files <- list.files(path = pathIn_graphs, pattern = patt) # take all files in pathIn
patt = paste("*.", form, sep = "") # pattern to match
files <- list.files(path = pathIn_graphs, pattern = patt) # take all files in pathIn
patt = paste("*.", form, sep = "") # pattern to match
list.files(path = pathIn_graphs, pattern = patt) # take all files in pathIn
patt = paste("*.", form, sep = "") # pattern to match
files <- list.files(path = pathIn_graphs, pattern = patt) # take all files in pathIn
files <- list.files(path = pathIn_graphs, pattern = patt) # take all files in pathIn
files <- list.files(path = pathIn_graphs, pattern = patt) # take all files in pathIn
list.files(path = pathIn_graphs, pattern = patt) # take all files in pathIn
list.files(path = pathIn_graphs, pattern = patt) # take all files in pathIn
list.files(path = pathIn_graphs, pattern = patt) # take all files in pathIn
list.files(path = pathIn_graphs, pattern = patt) # take all files in pathIn
list.files(path = pathIn_graphs, pattern = patt) # take all files in pathIn
list.files(path = pathIn_graphs, pattern = patt) # take all files in pathIn
list.files(path = pathIn_graphs, pattern = patt) # take all files in pathIn
list.files(path = pathIn_graphs, pattern = patt) # take all files in pathIn
list.files(path = pathIn_graphs, pattern = patt) # take all files in pathIn
list.files(path = pathIn_graphs, pattern = patt) # take all files in pathIn
list.files(path = pathIn_graphs, pattern = patt) # take all files in pathIn
list.files(path = pathIn_graphs, pattern = patt) # take all files in pathIn
list.files(path = pathIn_graphs, pattern = patt) # take all files in pathIn
list.files(path = pathIn_graphs, pattern = patt) # take all files in pathIn
list.files(path = pathIn_graphs, pattern = patt) # take all files in pathIn
list.files(path = pathIn_graphs, pattern = patt) # take all files in pathIn
list.files(path = pathIn_graphs, pattern = patt) # take all files in pathIn
list.files(path = pathIn_graphs, pattern = patt) # take all files in pathIn
list.files(path = pathIn_graphs, pattern = patt) # take all files in pathIn
list.files(path = pathIn_graphs, pattern = patt) # take all files in pathIn
list.files(path = pathIn_graphs, pattern = patt) # take all files in pathIn
list.files(path = pathIn_graphs, pattern = patt) # take all files in pathIn
list.files(path = pathIn_graphs, pattern = patt) # take all files in pathIn
list.files(path = pathIn_graphs, pattern = patt) # take all files in pathIn
for(i in 1:100){}
for(i in 1:100){files <- list.files(path = pathIn_graphs, pattern = patt) # take all files in pathIn}
for(i in 1:100){
files <- list.files(path = pathIn_graphs, pattern = patt) # take all files in pathIn
}
for(i in 1:100){
list.files(path = pathIn_graphs, pattern = patt)
}
for(i in 1:100){
list.files(path = pathIn_graphs, pattern = patt)
}
for(i in 1:100){
files <- list.files(path = pathIn_graphs, pattern = patt) # take all files in pathIn
}
for(i in 1:100){
files <- list.files(path = pathIn_graphs, pattern = patt) # take all files in pathIn
print(files)
}
source('~/Tesi/project_integration_intersect_3groups/R/clustering/spectral/borda_sw_dat/driver_controls.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/clustering/spectral/borda_sw_dat/driver_controls.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/clustering/spectral/borda_sw_dat/driver_controls.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/clustering/spectral/borda_sw_dat/driver_controls.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/clustering/spectral/spec_clust.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/clustering/spectral/borda_sw_dat/driver_controls.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/clustering/spectral/borda_sw_dat/driver_controls.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/clustering/spectral/borda_sw_dat/driver_controls.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/clustering/spectral/spec_clust.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/clustering/spectral/borda_sw_dat/driver_controls.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/clustering/spectral/borda_sw_dat/driver_controls.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/clustering/spectral/borda_sw_dat/driver_controls.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/clustering/spectral/borda_sw_dat/driver_controls.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/clustering/spectral/borda_sw_dat/driver_controls.R', echo=TRUE)
iles <- list.files(path = pathIn, pattern = patt) # take all files in pathIn
iles <- list.files(path = "./../../../../data/graphs_integration/borda_sw_004/Controls/", pattern = "*.graphml") # take all files in pathIn
iles
source('~/Tesi/project_integration_intersect_3groups/R/clustering/spectral/borda_sw_dat/driver_controls.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/clustering/spectral/borda_sw_dat/driver_controls.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/clustering/spectral/borda_sw_dat/driver_controls.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/clustering/spectral/borda_sw_dat/driver_all.R', echo=TRUE)
warnings
source('~/Tesi/project_integration_intersect_3groups/R/clustering/spectral/borda_sw_dat/driver_all.R', echo=TRUE)
g
MLC
gu <- get.adjacency(graph = g)
gu
gu <- get.adjacency(graph = g, attr = "fmri")
gu
mcl(x = gu, addLoops=TRUE, ESM = TRUE)
library(mcl)
library(MCL)
mcl(x = gu, addLoops=TRUE, ESM = TRUE)
library(MCL)
a <- library(MCL)
a$
r <- mcl(x = gu, addLoops=TRUE, ESM = TRUE)
r
r$K
r$n.iterations
r$Cluster
r <- mcl(x = gu, addLoops=TRUE, ESM = TRUE, expansion = 10)
r$Cluster
r <- mcl(x = gu, addLoops=TRUE, ESM = TRUE, expansion = 10)
r <- mcl(x = gu, addLoops=TRUE, ESM = TRUE, expansion = 1)
r$Cluster
r <- mcl(x = gu, addLoops=TRUE, ESM = TRUE, expansion = 2)
r$Cluster
r <- mcl(x = gu, addLoops=TRUE, ESM = TRUE, expansion = 3)
r$Cluster
r <- mcl(x = gu, addLoops=TRUE, ESM = TRUE, expansion = 2)
r <- mcl(x = gu, addLoops=TRUE, ESM = TRUE, expansion = 2, inflation = 5)
inflation
r <- mcl(x = gu, addLoops=TRUE, ESM = TRUE, expansion = 2, inflation = 5)
inflation
r <- mcl(x = gu, addLoops=TRUE, ESM = TRUE, expansion = 2, inflation = 5)
r$Cluster
r <- mcl(x = gu, addLoops=TRUE, ESM = TRUE, expansion = 2, inflation = 2)
r$Cluster
r <- mcl(x = gu, addLoops=TRUE, ESM = TRUE, expansion = 2, inflation = 1)
r <- mcl(x = gu, addLoops=TRUE, ESM = TRUE, expansion = 2, inflation = 2)
source("./../spinglass/", chdir = T)
("./../spinglass_comm.R", chdir = T)
source("./../spinglass_comm.R", chdir = T)
source('~/Tesi/project_integration_intersect_3groups/R/clustering/spinglass/borda_sw_dat/driver_controls.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/clustering/spinglass/borda_sw_dat/driver_controls.R', echo=TRUE)
m
mem_matrix <- spinglass.community(pathIn_graphs, pathOut_mem)
#' driver_controls
#'
#' spectral clustering on borda controls
#'
#' Author: Emanuele Pesce
rm(list = ls())
source("./../spinglass_comm.R", chdir = T)
source("./../../generics/coOccurence.R", chdir = T)
source("./../../generics/make_heatmap.R", chdir = T)
source("./../../generics/plot_clust.R", chdir = T)
# --------------------------- Initialization -----------------------------------
# number of clusters
print("#######################################################")
print(nc)
pathIn_graphs <- "./../../../../data/graphs_integration/borda_sw_004/Controls/"
pathIn_exampleGraph <- "./../../../../data/results/borda_example_graph.graphml"
pathOut_base <- "./../../../../data/results/spinglass/borda_sw_004/"
pathOut_mem <- paste(pathOut_base, "membership_controls.csv", sep ="")
pathOut_heat <- paste(pathOut_base, "heatmap_controls.jpeg", sep ="")
pathOut_graph3D <- paste(pathOut_base, "graph3d_controls.jpeg", sep ="")
pathOut_graph2D <- paste(pathOut_base, "graph2d_controls.jpeg", sep ="")
tmain = "Heatmap Controls"
# --------------------------- Definition ---------------------------------------
mem_matrix <- spinglass.community(pathIn_graphs, pathOut_mem)
mem_matrix <- spinglass_dir(pathIn_graphs, pathOut_mem)
source('~/Tesi/project_integration_intersect_3groups/R/clustering/spinglass/borda_sw_dat/driver_controls.R', echo=TRUE)
mem_matrix <- spinglass_dir(pathIn_graphs, pathOut_mem)
#' driver_controls
#'
#' spectral clustering on borda controls
#'
#' Author: Emanuele Pesce
rm(list = ls())
source("./../spinglass_comm.R", chdir = T)
source("./../../generics/coOccurence.R", chdir = T)
source("./../../generics/make_heatmap.R", chdir = T)
source("./../../generics/plot_clust.R", chdir = T)
# --------------------------- Initialization -----------------------------------
# number of clusters
print("#######################################################")
print(nc)
pathIn_graphs <- "./../../../../data/graphs_integration/borda_sw_004/Controls/"
pathIn_exampleGraph <- "./../../../../data/results/borda_example_graph.graphml"
pathOut_base <- "./../../../../data/results/spinglass/borda_sw_004/"
pathOut_mem <- paste(pathOut_base, "membership_controls.csv", sep ="")
pathOut_heat <- paste(pathOut_base, "heatmap_controls.jpeg", sep ="")
pathOut_graph3D <- paste(pathOut_base, "graph3d_controls.jpeg", sep ="")
pathOut_graph2D <- paste(pathOut_base, "graph2d_controls.jpeg", sep ="")
tmain = "Heatmap Controls"
# --------------------------- Definition ---------------------------------------
mem_matrix <- spinglass_dir(pathIn_graphs, pathOut_mem)
m <- mem_matrix[,-(1:2)]
m <- as.matrix(m)
class(m) <- "numeric"
coOc_m<- coOccurrence(m)
g <- read.graph(pathIn_exampleGraph, format = "graphml")
m
# clustering
dm <- dist(m)
hc <- hclust(dm)
hcc <- cutree(hc, k = k)
hcc <- as.vector(hcc)
m <- coOc_m
m
hcc
# clustering
dm <- dist(m)
hc <- hclust(dm)
hcc <- cutree(hc, k = k)
hcc <- as.vector(hcc)
dm
hc
hcc <- cutree(hc, k = k)
hcc <- cutree(hc, k = 10)
hcc <- as.vector(hcc)
hcc
H <- makeHeatmap(coOc_m, pathOut = pathOut_heat, tmain = tmain)
source('~/Tesi/project_integration_intersect_3groups/R/clustering/spinglass/borda_sw_dat/driver_all.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/clustering/spinglass/borda_sw_dat/driver_all.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/clustering/spinglass/borda_sw_dat/driver_all.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/clustering/spinglass/borda_sw_dat/driver_all.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/clustering/spinglass/borda_sw_dat/driver_all.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/clustering/spinglass/borda_sw_dat/driver_all.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/clustering/spinglass/borda_sw_dat/driver_all.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/clustering/spinglass/borda_sw_dat/driver_all.R', echo=TRUE)

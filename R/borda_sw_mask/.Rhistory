save(r_Controls, r_SLA2, r_SLA3, file = path_results_cutting)
debugSource('~/Tesi/project_integration_intersect_3groups/R/borda_sw_mask/driver_create_borda_mask.R', echo=TRUE)
debugSource('~/Tesi/project_integration_intersect_3groups/R/borda_sw_mask/driver_create_borda_mask.R', echo=TRUE)
#' borda_extracting_mask
#'
#' Generate borda mask.
#' After we have taken the result of borda voting, and after we have done the
#' cutting with S/W ties, we have to aggregate the result, doing the union the
#' masks.
#'
#' Applying this mask it could be generate borda_ws_cutting dataset.
#'
#' Furthermore rusult objects of SW cutting procedure are saved in order to be
#' recovered lately (for attaching label for example).
#'
#' Author: Emanuele Pesce
rm(list = ls())
source("./borda_extracting_mask.R", chdir = T)
source("./../strong_weak_ties_cutting/sw_cutting.R", chdir = T)
source("./../utils/graphUtils.R", chdir = T)
# -------------------------- Inititialization ----------------------------------
verbose = 1
if(verbose > 0){
print("Initialization..")
}
pathBordaControls <- "./../../data/other/borda/borda_matrix_controls.txt"
pathBordaSLA2 <- "./../../data/other/borda/borda_matrix_SLA2.txt"
pathBordaSLA3 <- "./../../data/other/borda/borda_matrix_SLA3.txt"
pathMask_borda_ws_cutting <- "./../../data/other/borda/borda_mask_ws_cutting.csv"
pathMask_borda_ws_cutting_info <- "./../../data/other/borda/borda_mask_ws_cutting_info.csv"
path_results_cutting <- "./../../data/other/borda/borda_sw_cut_objects.RData"
#' Author: Emanuele Pesce
rm(list = ls())
source("./borda_extracting_mask.R", chdir = T)
source("./../strong_weak_ties_cutting/sw_cutting.R", chdir = T)
source("./../utils/graphUtils.R", chdir = T)
# -------------------------- Inititialization ----------------------------------
verbose = 1
if(verbose > 0){
print("Initialization..")
}
pathBordaControls <- "./../../data/other/borda/borda_matrix_controls.txt"
pathBordaSLA2 <- "./../../data/other/borda/borda_matrix_SLA2.txt"
pathBordaSLA3 <- "./../../data/other/borda/borda_matrix_SLA3.txt"
pathMask_borda_ws_cutting <- "./../../data/other/borda/borda_mask_ws_cutting.csv"
pathMask_borda_ws_cutting_info <- "./../../data/other/borda/borda_mask_ws_cutting_info.csv"
path_results_cutting <- "./../../data/other/borda/borda_sw_cut_objects.RData"
load(path_results_cutting)
load(file = path_results_cutting)
debugSource('~/Tesi/project_integration_intersect_3groups/R/borda_sw_mask/driver_create_borda_mask.R', echo=TRUE)
print("Edges in Controls")
print(r_Control$n_residualEdges)
print("Edges in SLA2")
print(r_SLA2$n_residualEdges)
print("Edges in SLA3")
print(r_SLA3$n_residualEdges)
print("Edges in Union")
print(dim(maskU)[1])
print("Union - Controls")
print(r1 <- dim(maskU)[1] - r_Controls$n_residualEdges)
print("Union - SLA2")
print(r2 <- dim(maskU)[1] - r_SLA2$n_residualEdges)
print("Union - SLA3")
print(r3 <- dim(maskU)[1] - r_SLA3$n_residualEdges)
print("Edges in Controls")
print(r_Control$n_residualEdges)
print("Edges in SLA2")
print(r_SLA2$n_residualEdges)
print("Edges in SLA3")
print(r_SLA3$n_residualEdges)
print("Edges in Union")
print(dim(maskU)[1])
print("Union - Controls")
print(r1 <- dim(maskU)[1] - r_Controls$n_residualEdges)
print("Union - SLA2")
print(r2 <- dim(maskU)[1] - r_SLA2$n_residualEdges)
print("Union - SLA3")
print(r3 <- dim(maskU)[1] - r_SLA3$n_residualEdges)
# saving
out <- list("e_controls" = r_Controls$n_residualEdges, "e_SLA2" = r_SLA2$n_residualEdges,
"e_SLA3" = r_SLA3$n_residualEdges, "e_union" = dim(maskU)[1], "e_union_m_controls" = r1,
"e_union_m_SLA2" = r2, "e_union_m_SLA3" = r3 )
write.csv(out, file = pathMask_borda_ws_cutting_info)
write.table(r,file= pathMask_borda_ws_cutting, sep="\t", col.names = F, row.names = F)
save.image(file = "driver_create_borda_mask.RData")
print("Edges in Controls")
print(r_Control$n_residualEdges)
print("Edges in SLA2")
print(r_SLA2$n_residualEdges)
print("Edges in SLA3")
print(r_SLA3$n_residualEdges)
print("Edges in Union")
print(dim(maskU)[1])
print("Union - Controls")
print(r1 <- dim(maskU)[1] - r_Controls$n_residualEdges)
print("Union - SLA2")
print(r2 <- dim(maskU)[1] - r_SLA2$n_residualEdges)
print("Union - SLA3")
print(r3 <- dim(maskU)[1] - r_SLA3$n_residualEdges)
# saving
out <- list("e_controls" = r_Controls$n_residualEdges, "e_SLA2" = r_SLA2$n_residualEdges,
"e_SLA3" = r_SLA3$n_residualEdges, "e_union" = dim(maskU)[1], "e_union_m_controls" = r1,
"e_union_m_SLA2" = r2, "e_union_m_SLA3" = r3 )
write.csv(out, file = pathMask_borda_ws_cutting_info)
write.table(maskU,file= pathMask_borda_ws_cutting, sep="\t", col.names = F, row.names = F)
save.image(file = "driver_create_borda_mask.RData")
time  <- proc.time() - ptm
print(time)
source('~/Tesi/project_integration_intersect_3groups/R/borda_sw_mask/driver_create_borda_mask.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/borda_sw_mask/driver_create_borda_mask.R', echo=TRUE)
rm(list = ls())
source("./borda_extracting_mask.R", chdir = T)
source("./../strong_weak_ties_cutting/sw_cutting.R", chdir = T)
source("./../utils/graphUtils.R", chdir = T)
# -------------------------- Inititialization ----------------------------------
verbose = 1
if(verbose > 0){
print("Initialization..")
}
pathBordaControls <- "./../../data/other/borda/borda_matrix_controls.txt"
pathBordaSLA2 <- "./../../data/other/borda/borda_matrix_SLA2.txt"
pathBordaSLA3 <- "./../../data/other/borda/borda_matrix_SLA3.txt"
pathMask_borda_ws_cutting <- "./../../data/other/borda/borda_mask_ws_cutting.csv"
pathMask_borda_ws_cutting_info <- "./../../data/other/borda/borda_mask_ws_cutting_info.csv"
path_results_cutting <- "./../../data/other/borda/borda_sw_cut_objects.RData"
load(path_results_cutting)
residual_Controls <- r_Controls$residualGraph
residual_SLA2 <- r_SLA2$residualGraph
residual_SLA3 <- r_SLA3$residualGraph
# union masks: first compute all masks, then do the union
# computer all masks
mask1 <- unionMask(residual_Controls, residual_SLA2)
mask2 <- unionMask(residual_Controls, residual_SLA3)
# union
maskU <- rbind(mask1, mask2)
maskU <- unique(maskU)
print("Edges in Controls")
print(r_Controls$n_residualEdges)
print("Edges in SLA2")
print(r_SLA2$n_residualEdges)
print("Edges in SLA3")
print(r_SLA3$n_residualEdges)
print("Edges in Union")
print(dim(maskU)[1])
print("Union - Controls")
print(r1 <- dim(maskU)[1] - r_Controls$n_residualEdges)
print("Union - SLA2")
print(r2 <- dim(maskU)[1] - r_SLA2$n_residualEdges)
print("Union - SLA3")
print(r3 <- dim(maskU)[1] - r_SLA3$n_residualEdges)
# saving
out <- list("e_controls" = r_Controls$n_residualEdges, "e_SLA2" = r_SLA2$n_residualEdges,
"e_SLA3" = r_SLA3$n_residualEdges, "e_union" = dim(maskU)[1], "e_union_m_controls" = r1,
"e_union_m_SLA2" = r2, "e_union_m_SLA3" = r3 )
write.csv(out, file = pathMask_borda_ws_cutting_info)
write.table(maskU,file= pathMask_borda_ws_cutting, sep="\t", col.names = F, row.names = F)
save.image(file = "driver_create_borda_mask.RData")
time  <- proc.time() - ptm
print(time)
residual_Controls <- r_Controls$residualGraph
residual_SLA2 <- r_SLA2$residualGraph
residual_SLA3 <- r_SLA3$residualGraph
# union masks: first compute all masks, then do the union
# computer all masks
mask1 <- unionMask(residual_Controls, residual_SLA2)
mask2 <- unionMask(residual_Controls, residual_SLA3)
# union
maskU <- rbind(mask1, mask2)
maskU <- unique(maskU)
print("Edges in Controls")
print(r_Controls$n_residualEdges)
print("Edges in SLA2")
print(r_SLA2$n_residualEdges)
print("Edges in SLA3")
print(r_SLA3$n_residualEdges)
print("Edges in Union")
print(dim(maskU)[1])
print("Union - Controls")
print(r1 <- dim(maskU)[1] - r_Controls$n_residualEdges)
print("Union - SLA2")
print(r2 <- dim(maskU)[1] - r_SLA2$n_residualEdges)
print("Union - SLA3")
print(r3 <- dim(maskU)[1] - r_SLA3$n_residualEdges)
# saving
out <- list("e_controls" = r_Controls$n_residualEdges, "e_SLA2" = r_SLA2$n_residualEdges,
"e_SLA3" = r_SLA3$n_residualEdges, "e_union" = dim(maskU)[1], "e_union_m_controls" = r1,
"e_union_m_SLA2" = r2, "e_union_m_SLA3" = r3 )
write.csv(out, file = pathMask_borda_ws_cutting_info)
write.table(maskU,file= pathMask_borda_ws_cutting, sep="\t", col.names = F, row.names = F)
save.image(file = "driver_create_borda_mask.RData")
source('~/Tesi/project_integration_intersect_3groups/R/borda_sw_mask/driver_create_borda_mask.R', echo=TRUE)
load(file = "driver_create_borda_mask.RData")
maskU
mask1
residualControls
residual_Controls
mask1
a <- get.edgelist(residual_Controls)
library(igraph)
a <- get.edgelist(residual_Controls)
a
residual_Controls
maskU
?sub
numeric("90")
as.integer("90")
new_mask <- as.integer(tmp)
new_mask <- matrix(nrow = n_row, ncol = 2)
tmp <- sub("V",maskU[1, 1], "")
new_mask[1,1] <- as.integer(tmp)
new_mask <- matrix(nrow = dim(maskU)[1], ncol = 2)
tmp <- sub("V",maskU[1, 1], "")
new_mask[1,1] <- as.integer(tmp)
new_mask
new_mask[1,1]
tmp <- sub("V",maskU[1, 1], "")
new_mask[1,1] <- as.integer(tmp)
new_mask[1,1]
new_mask <- matrix(nrow = dim(maskU)[1], ncol = 2)
new_mask
tmp <- sub("V",maskU[1, 1], "")
new_mask[1,1] <- as.integer(tmp)
new_mask[1,1]
as.integer(tmp)
tmp
maskU[1,1]
tmp <- maskU[1,1]
tmp <- gsub("V",maskU[1, 1], "")
new_mask[1,1] <- as.integer(tmp)
tmp
tmp <- gsub("V","", maskU[1, 1])
new_mask[1,1] <- as.integer(tmp)
tmp
new_mask <- matrix(nrow = dim(maskU)[1], ncol = 2)
for(i in 1:dim(maskU)[1]){
tmp <- gsub("V","", maskU[i, 1])
new_mask[i,1] <- as.integer(tmp)
tmp <- gsub("V","", maskU[i, 1])
new_mask[i,2] <- as.integer(tmp)
}
write.table(new_mask,file= pathMask_borda_ws_cutting, sep="\t", col.names = F, row.names = F)
write.table(maskU,file= pathMask_borda_ws_cutting, sep="\t", col.names = F, row.names = F)
pathMask_borda_ws_cutting_num <- "./../../data/other/borda/borda_mask_ws_cutting_num.csv"
# create a numeric mask (without "V" in cells)
new_mask <- matrix(nrow = dim(maskU)[1], ncol = 2)
for(i in 1:dim(maskU)[1]){
tmp <- gsub("V","", maskU[i, 1])
new_mask[i,1] <- as.integer(tmp)
tmp <- gsub("V","", maskU[i, 1])
new_mask[i,2] <- as.integer(tmp)
}
write.table(new_mask,file= pathMask_borda_ws_cutting_num, sep="\t", col.names = F, row.names = F)
# create a numeric mask (without "V" in cells)
new_mask <- matrix(nrow = dim(maskU)[1], ncol = 2)
for(i in 1:dim(maskU)[1]){
tmp <- gsub("V","", maskU[i, 1])
new_mask[i,1] <- as.integer(tmp)
tmp <- gsub("V","", maskU[i, 2])
new_mask[i,2] <- as.integer(tmp)
}
write.table(new_mask,file= pathMask_borda_ws_cutting_num, sep="\t", col.names = F, row.names = F)
load(file = "driver_create_borda_mask.RData")
r_Controls
str(r_Controls)
r_Controls$n_strong
r_Controls$toRemove
r_Controls$residualGraph
r_Controls$v_strong
r_Controls$n_residualEdges
r_Controls$n_strong
path_results_cutting <- "./../../data/other/borda/borda_sw_cut_objects.RData"
load(path_results_cutting)
residual_Controls <- r_Controls$residualGraph
residual_SLA2 <- r_SLA2$residualGraph
residual_SLA3 <- r_SLA3$residualGraph
mask1 <- unionMask(residual_Controls, residual_SLA2)
rm(list = ls())
source("./borda_extracting_mask.R", chdir = T)
source("./../strong_weak_ties_cutting/sw_cutting.R", chdir = T)
source("./../utils/graphUtils.R", chdir = T)
mask1 <- unionMask(residual_Controls, residual_SLA2)
residual_Controls <- r_Controls$residualGraph
residual_SLA2 <- r_SLA2$residualGraph
residual_SLA3 <- r_SLA3$residualGraph
load(path_results_cutting)
path_results_cutting <- "./../../data/other/borda/borda_sw_cut_objects.RData"
load(path_results_cutting)
residual_Controls <- r_Controls$residualGraph
residual_SLA2 <- r_SLA2$residualGraph
residual_SLA3 <- r_SLA3$residualGraph
mask1 <- unionMask(residual_Controls, residual_SLA2)
residual_Controls
path_results_cutting <- "./../../data/other/borda/borda_sw_cut_objects.RData"
load(pathBordaControls)
load(path_results_cutting)
r_Controls
g_SLA3
g_SLA3 <- i_adjacencyFromFile(pathBordaSLA3)
source("./borda_extracting_mask.R", chdir = T)
source("./../strong_weak_ties_cutting/sw_cutting.R", chdir = T)
source("./../utils/graphUtils.R", chdir = T)
pathBordaControls <- "./../../data/other/borda/borda_matrix_controls.txt"
pathBordaSLA2 <- "./../../data/other/borda/borda_matrix_SLA2.txt"
pathBordaSLA3 <- "./../../data/other/borda/borda_matrix_SLA3.txt"
pathMask_borda_ws_cutting <- "./../../data/other/borda/borda_mask_ws_cutting.csv"
pathMask_borda_ws_cutting_num <- "./../../data/other/borda/borda_mask_ws_cutting_num.csv"
pathMask_borda_ws_cutting_info <- "./../../data/other/borda/borda_mask_ws_cutting_info.csv"
path_results_cutting <- "./../../data/other/borda/borda_sw_cut_objects.RData"
g_SLA3 <- i_adjacencyFromFile(pathBordaSLA3)
r_SLA3 <- sw_cutting(g_SLA3, threshold = 0.05, flow = 0)
r_SA3
r_SLA3
mask1 <- unionMask(r_SLA3$n_residualEdges, r_SLA3$n_residualEdges)
mask1 <- unionMask(r_SLA3$residualGraph, r_SLA3$residualGraph)
library(igraph)
pathBordaControls <- "./../../data/other/borda/borda_matrix_controls.txt"
pathBordaSLA2 <- "./../../data/other/borda/borda_matrix_SLA2.txt"
pathBordaSLA3 <- "./../../data/other/borda/borda_matrix_SLA3.txt"
pathMask_borda_ws_cutting <- "./../../data/other/borda/borda_mask_ws_cutting.csv"
pathMask_borda_ws_cutting_num <- "./../../data/other/borda/borda_mask_ws_cutting_num.csv"
pathMask_borda_ws_cutting_info <- "./../../data/other/borda/borda_mask_ws_cutting_info.csv"
path_results_cutting <- "./../../data/other/borda/borda_sw_cut_objects.RData"
load(path_results_cutting)
residual_Controls <- r_Controls$residualGraph
residual_SLA2 <- r_SLA2$residualGraph
residual_SLA3 <- r_SLA3$residualGraph
mask1 <- unionMask(residual_Controls, residual_SLA2)
residual_Controls
r_Controls1 <- sw_cutting(g_Controls, threshold = 0.05, flow = 0)
r_Controls
r_Controls1
r_Controls1$residualGraph
r_Controls$residualGraph
residual_Controls <- r_Controls1$residualGraph
mask1 <- unionMask(residual_Controls, residual_Controls)
residual_Controls <- r_Controls$residualGraph
mask1 <- unionMask(residual_Controls, residual_Controls)
mask1 <- unionMask(residual_Controls, residual_Controls)
edgesC <- edgesC[-indexToRmv,]
indexToRmv <- c()
for (i in 1:dim(edgesP)[1]){
v1 = edgesP[i,1]
v2 = edgesP[i,2]
if (v1 == v2){
indexToRmv <- c(indexToRmv, i)
}
}
edgesP <- edgesP[-indexToRmv,]
indexToRmv
indexToRmv <- c()
edgesP <- get.edgelist(gP)
edgesP
indexToRmv <- c()
indexToRmv <- c()
edgesC <- get.edgelist(gC)
edgesC
indexToRmv <- c()
indexToRmv
indexToRmv
is.null(indexToRmv)
for (i in 1:dim(edgesC)[1]){
v1 = edgesC[i,1]
v2 = edgesC[i,2]
if (v1 == v2){
indexToRmv <- c(indexToRmv, i)
}
}
is.null(indexToRmv)
indexToRmv
edgesC <- get.edgelist(gC)
edgesP <- get.edgelist(gP)
# cleaning: remove from each list edges with same nodes (i.e.: [V1, V1])
indexToRmv <- c()
for (i in 1:dim(edgesC)[1]){
v1 = edgesC[i,1]
v2 = edgesC[i,2]
if (v1 == v2){
indexToRmv <- c(indexToRmv, i)
}
}
indexToRmv
edgesC <- edgesC[-indexToRmv,]
mask1 <- unionMask(residual_Controls, residual_Controls)
mask1 <- unionMask(residual_Controls, residual_Controls)
mask1 <- unionMask(residual_Controls, residual_Controls)
mask1 <- unionMask(residual_Controls, residual_Controls)
mask1 <- unionMask(residual_Controls, residual_Controls)
library(igraph)
path_results_cutting <- "./../../data/other/borda/borda_sw_cut_objects.RData"
load(path_results_cutting)
residual_Controls <- r_Controls1$residualGraph
load(path_results_cutting)
residual_Controls <- r_Controls1$residualGraph
residual_Controls <- r_Controls$residualGraph
mask1 <- unionMask(residual_Controls, residual_Controls)
debugSource('~/Tesi/project_integration_intersect_3groups/R/borda_sw_mask/borda_extracting_mask.R', echo=TRUE)
n_row <- length(indicesP) + dim(edgesC)[1]
m <- matrix(nrow = n_row, ncol = 2)
for(i in 1:dim(edgesC)[1]){
m[i, 1] <- edgesC[i, 1]
m[i, 2] <- edgesC[i, 2]
}
j = 0
for(i in (dim(edgesC)[1]+1):n_row){
j = j + 1
m[i, 1] <- edgesP[indicesP[j], 1]
m[i, 2] <- edgesP[indicesP[j], 2]
}
return(m)
m
debugSource('~/Tesi/project_integration_intersect_3groups/R/borda_sw_mask/borda_extracting_mask.R', echo=TRUE)
debugSource('~/Tesi/project_integration_intersect_3groups/R/borda_sw_mask/borda_extracting_mask.R', echo=TRUE)
n_row <- length(indicesP) + dim(edgesC)[1]
m <- matrix(nrow = n_row, ncol = 2)
dim(edgesC)
for(i in 1:dim(edgesC)[1]){
m[i, 1] <- edgesC[i, 1]
m[i, 2] <- edgesC[i, 2]
}
j = 0
debugSource('~/Tesi/project_integration_intersect_3groups/R/borda_sw_mask/borda_extracting_mask.R', echo=TRUE)
debugSource('~/Tesi/project_integration_intersect_3groups/R/borda_sw_mask/borda_extracting_mask.R', echo=TRUE)
debugSource('~/Tesi/project_integration_intersect_3groups/R/borda_sw_mask/borda_extracting_mask.R', echo=TRUE)
debugSource('~/Tesi/project_integration_intersect_3groups/R/borda_sw_mask/borda_extracting_mask.R', echo=TRUE)
debugSource('~/Tesi/project_integration_intersect_3groups/R/borda_sw_mask/borda_extracting_mask.R', echo=TRUE)
edgesP
edgesC
edgesP
edgesP
edgesC
new_edges <- rbind(edgesC, edgesP)
new_edges <- unique(new_edges)
newedges
new_edges
indicesP
indicesP = c()
for (i in 1:dim(edgesP)[1]){
v1 = edgesP[i,1]
v2 = edgesP[i,2]
find = 0
for (j in 1:dim(edgesC)[1]){
# if an edge of P is in C save it and after add it
if((v1 == edgesC[j,1]) && (v2 == edgesC[j,2])){
find = 1
}
if(find == 1) break
}
if(find == 0){ # element i in P is not in C
indicesP <- c(indicesP, i)
}
}
indicesP
debugSource('~/Tesi/project_integration_intersect_3groups/R/borda_sw_mask/borda_extracting_mask.R', echo=TRUE)
indicesP
n_row
n_row <- length(new_edges)
n_row
new_edges
n_row <- dim(new_edges)[1]
n_row
m <- matrix(nrow = n_row, ncol = 2)
source('~/Tesi/project_integration_intersect_3groups/R/borda_sw_mask/borda_extracting_mask.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/borda_sw_mask/borda_extracting_mask.R', echo=TRUE)
mask1
mask[1]
mask1[1]
mask1[2]
source('~/Tesi/project_integration_intersect_3groups/R/exp_threshold_borda_dataset/extract_single_mask.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/borda_sw_mask/driver_create_borda_mask.R', echo=TRUE)
save(r_Controls, r_SLA2, r_SLA3, file = path_results_objects)
residual_Controls <- r_Controls$residualGraph
residual_SLA2 <- r_SLA2$residualGraph
residual_SLA3 <- r_SLA3$residualGraph
# union masks: first compute all masks, then do the union
# computer all masks
mask1 <- unionMask(residual_Controls, residual_SLA2)
mask2 <- unionMask(residual_Controls, residual_SLA3)
# union
maskU <- rbind(mask1, mask2)
maskU <- unique(maskU)
print("Edges in Controls")
print(r_Controls$n_residualEdges)
print("Edges in SLA2")
print(r_SLA2$n_residualEdges)
print("Edges in SLA3")
print(r_SLA3$n_residualEdges)
print("Edges in Union")
print(dim(maskU)[1])
print("Union - Controls")
print(r1 <- dim(maskU)[1] - r_Controls$n_residualEdges)
print("Union - SLA2")
print(r2 <- dim(maskU)[1] - r_SLA2$n_residualEdges)
print("Union - SLA3")
print(r3 <- dim(maskU)[1] - r_SLA3$n_residualEdges)
# saving
out <- list("e_controls" = r_Controls$n_residualEdges, "e_SLA2" = r_SLA2$n_residualEdges,
"e_SLA3" = r_SLA3$n_residualEdges, "e_union" = dim(maskU)[1], "e_union_m_controls" = r1,
"e_union_m_SLA2" = r2, "e_union_m_SLA3" = r3 )
write.csv(out, file = pathMask_borda_ws_cutting_info)
write.table(maskU,file= pathMask_borda_ws_cutting, sep="\t", col.names = F, row.names = F)
# create a numeric mask (without "V" in cells)
new_mask <- matrix(nrow = dim(maskU)[1], ncol = 2)
for(i in 1:dim(maskU)[1]){
tmp <- gsub("V","", maskU[i, 1])
new_mask[i,1] <- as.integer(tmp)
tmp <- gsub("V","", maskU[i, 2])
new_mask[i,2] <- as.integer(tmp)
}
write.table(new_mask,file= pathMask_borda_ws_cutting_num, sep="\t", col.names = F, row.names = F)
save.image(file = paste(pathOut, "driver_create_borda_mask.RData", sep =""))
time  <- proc.time() - ptm
print(time)

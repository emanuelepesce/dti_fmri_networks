#' borda_extracting_mask
#'
#' Generate borda mask.
#' After we have taken the result of borda voting, and after we have done the
#' cutting with S/W ties, we have to aggregate the result, doing the union the
#' masks.
#'
#' Applying this mask it could be generate borda_ws_cutting dataset.
#'
#' Author: Emanuele Pesce
rm(list = ls())
source("./borda_extracting_mask.R")
# -------------------------- Inititialization ----------------------------------
pathBordaControls <- "./../../data/other/borda/borda_matrix_controls.txt"
pathBordaSLA2 <- "./../../data/other/borda/borda_matrix_SLA2.txt"
pathBordaSLA3 <- "./../../data/other/borda/borda_matrix_SLA3.txt"
pathMask_borda_ws_cutting <- "./../../data/other/borda/borda_mask_ws_cutting.txt"
debugSource('~/Tesi/project_integration_intersect_3groups/R/borda_sw_mask/driver_create_borda_mask.R', echo=TRUE)
debugSource('~/Tesi/project_integration_intersect_3groups/R/borda_sw_mask/driver_create_borda_mask.R', echo=TRUE)
debugSource('~/Tesi/project_integration_intersect_3groups/R/borda_sw_mask/driver_create_borda_mask.R', echo=TRUE)
debugSource('~/Tesi/project_integration_intersect_3groups/R/borda_sw_mask/driver_create_borda_mask.R', echo=TRUE)
save.image(file = "driver_create_borda_mask_cutting_done.RData")
residual_Controls <- r_Controls$residualGraph
residual_Controls <- r_Control$residualGraph
residual_SLA2 <- r_SLA2$residualGraph
residual_SLA3 <- r_SLA3$residualGraph
residual_Controls
residual_Controls <- r_Controls$residualGraph
residual_SLA2 <- r_SLA2$residualGraph
residual_SLA3 <- r_SLA3$residualGraph
residual_Control <- r_Controls$residualGraph
residual_Controls <- r_Control$residualGraph
residual_SLA2 <- r_SLA2$residualGraph
residual_SLA3 <- r_SLA3$residualGraph
r <- unionMask(residual_Controls, residual_SLA2)
r <- unionMask(r, residual_SLA)
r <- unionMask(r, residual_SLA3)
r
residual_SLA3
residual_SLA2
residual_Controls
r
dim(r)
str(r)
a <- ["v1", "v2"]
a <- ["v1", "v2"]
a <- c("v1", "v2")
a
str(a)
m <- matrix(nrow = n_row, ncol = 2)
m <- matrix(nrow = 2, ncol = 2)
m <- matrix(nrow = 2, ncol = 2, data = 1:4)
m
m1 <- matrix(nrow = 2, ncol = 2, data = 2:6)
m1 <- matrix(nrow = 2, ncol = 2, data = 3:6)
m1
m <- matrix(nrow = 2, ncol = 2, data = 1:4, byrow = T)
m
m2 <- matrix(nrow = 2, ncol = 2, data = 3:6, byrow = T)
m2
union(m1,m2)
union(m,m2)
rbind(m,m2)
m3 <- rbind(m,m2)
unique(m3)
load(file = "driver_create_borda_mask_cutting_done.RData")
residual_Controls <- r_Controls$residualGraph
residual_SLA2 <- r_SLA2$residualGraph
residual_SLA3 <- r_SLA3$residualGraph
residual_Controls <- r_Control$residualGraph
mask1 <- unionMask(residual_Controls, residual_SLA2)
mask2 <- unionMask(residual_Controls, residual_SLA3)
maskU <- rbind(mask1, mask2)
maskU <- unique(maskU)
maskU
mask1
mask2
maskU
residual_SLA3
print("Edges in Controls")
print(r_Control$n_residualEdges)
print("Edges in SLA2")
print(r_SLA2$n_residualEdges)
print("Edges in SLA3")
print(r_SLA2$n_residualEdges)
print("Edges in Union")
print(dim(maskU)[1])
print("Union - Controls")
print(dim(maskU)[1] - r_Control$n_residualEdges)
print("Union - SLA2")
print(dim(maskU)[1] - r_SLA2$n_residualEdges)
print("Union - SLA3")
print(dim(maskU)[1] - r_SLA3$n_residualEdges)
print("Edges in Controls")
print(r_Control$n_residualEdges)
print("Edges in SLA2")
print(r_SLA2$n_residualEdges)
print("Edges in SLA3")
print(r_SLA3$n_residualEdges)
print("Edges in Union")
print(dim(maskU)[1])
print("Union - Controls")
print(dim(maskU)[1] - r_Control$n_residualEdges)
print("Union - SLA2")
print(dim(maskU)[1] - r_SLA2$n_residualEdges)
print("Union - SLA3")
print(dim(maskU)[1] - r_SLA3$n_residualEdges)
print(a <- dim(maskU)[1] - r_Control$n_residualEdges)
a
out <- list("e_controls" = RC$n_residualEdges, "e_patients" = r_Controls$n_residualEdges,
"e_union" = dim(maskU)[1], "e_union_m_controls" = r1,
"e_union_m_SLA2" = r2, "e_union_m_SLA3" = r3 )
out <- list("e_controls" = r_Controls$n_residualEdges, "e_SLA2" = SLA2$n_residualEdges,
"e_SLA3" = SL3$n_residualEdges, "e_union" = dim(maskU)[1], "e_union_m_controls" = r1,
"e_union_m_SLA2" = r2, "e_union_m_SLA3" = r3 )
r_Controls <- r_Control
out <- list("e_controls" = r_Controls$n_residualEdges, "e_SLA2" = SLA2$n_residualEdges,
"e_SLA3" = SL3$n_residualEdges, "e_union" = dim(maskU)[1], "e_union_m_controls" = r1,
"e_union_m_SLA2" = r2, "e_union_m_SLA3" = r3 )
out <- list("e_controls" = r_Controls$n_residualEdges, "e_SLA2" = r_SLA2$n_residualEdges,
"e_SLA3" = r_SL3$n_residualEdges, "e_union" = dim(maskU)[1], "e_union_m_controls" = r1,
"e_union_m_SLA2" = r2, "e_union_m_SLA3" = r3 )
out <- list("e_controls" = r_Controls$n_residualEdges, "e_SLA2" = r_SLA2$n_residualEdges,
"e_SLA3" = r_SLA3$n_residualEdges, "e_union" = dim(maskU)[1], "e_union_m_controls" = r1,
"e_union_m_SLA2" = r2, "e_union_m_SLA3" = r3 )
print("Union - Controls")
print(r1 <- dim(maskU)[1] - r_Control$n_residualEdges)
print("Union - SLA2")
print(r2 <- dim(maskU)[1] - r_SLA2$n_residualEdges)
print("Union - SLA3")
print(r3 <- dim(maskU)[1] - r_SLA3$n_residualEdges)
out <- list("e_controls" = r_Controls$n_residualEdges, "e_SLA2" = r_SLA2$n_residualEdges,
"e_SLA3" = r_SLA3$n_residualEdges, "e_union" = dim(maskU)[1], "e_union_m_controls" = r1,
"e_union_m_SLA2" = r2, "e_union_m_SLA3" = r3 )
out
write.csv(out, file = "info_maskUnion.csv")
write.table(r,file="edgesMask.csv",sep="\t", col.names = F, row.names = F)
save(r_Controls, r_SLA2, r_SLA3, file = "borda_sw_cut_objects.RData")
load(file = "./borda_extracting_mask.R")
rm(list = ls())
load(file = "./driver_create_borda_mask_cutting_done.RData")
r_Controls
rm(list = ls())
load(file = "./borda_sw_cut_objects.RData")
r_Controls
r_Controls$residualGraph
r_Controls$v_strong
path_results_cutting <- "./../../data/other/borda/borda_sw_cut_objects.RData"
save(r_Controls, r_SLA2, r_SLA3, file = path_results_cutting)
debugSource('~/Tesi/project_integration_intersect_3groups/R/borda_sw_mask/driver_create_borda_mask.R', echo=TRUE)
debugSource('~/Tesi/project_integration_intersect_3groups/R/borda_sw_mask/driver_create_borda_mask.R', echo=TRUE)
#' borda_extracting_mask
#'
#' Generate borda mask.
#' After we have taken the result of borda voting, and after we have done the
#' cutting with S/W ties, we have to aggregate the result, doing the union the
#' masks.
#'
#' Applying this mask it could be generate borda_ws_cutting dataset.
#'
#' Furthermore rusult objects of SW cutting procedure are saved in order to be
#' recovered lately (for attaching label for example).
#'
#' Author: Emanuele Pesce
rm(list = ls())
source("./borda_extracting_mask.R", chdir = T)
source("./../strong_weak_ties_cutting/sw_cutting.R", chdir = T)
source("./../utils/graphUtils.R", chdir = T)
# -------------------------- Inititialization ----------------------------------
verbose = 1
if(verbose > 0){
print("Initialization..")
}
pathBordaControls <- "./../../data/other/borda/borda_matrix_controls.txt"
pathBordaSLA2 <- "./../../data/other/borda/borda_matrix_SLA2.txt"
pathBordaSLA3 <- "./../../data/other/borda/borda_matrix_SLA3.txt"
pathMask_borda_ws_cutting <- "./../../data/other/borda/borda_mask_ws_cutting.csv"
pathMask_borda_ws_cutting_info <- "./../../data/other/borda/borda_mask_ws_cutting_info.csv"
path_results_cutting <- "./../../data/other/borda/borda_sw_cut_objects.RData"
#' Author: Emanuele Pesce
rm(list = ls())
source("./borda_extracting_mask.R", chdir = T)
source("./../strong_weak_ties_cutting/sw_cutting.R", chdir = T)
source("./../utils/graphUtils.R", chdir = T)
# -------------------------- Inititialization ----------------------------------
verbose = 1
if(verbose > 0){
print("Initialization..")
}
pathBordaControls <- "./../../data/other/borda/borda_matrix_controls.txt"
pathBordaSLA2 <- "./../../data/other/borda/borda_matrix_SLA2.txt"
pathBordaSLA3 <- "./../../data/other/borda/borda_matrix_SLA3.txt"
pathMask_borda_ws_cutting <- "./../../data/other/borda/borda_mask_ws_cutting.csv"
pathMask_borda_ws_cutting_info <- "./../../data/other/borda/borda_mask_ws_cutting_info.csv"
path_results_cutting <- "./../../data/other/borda/borda_sw_cut_objects.RData"
load(path_results_cutting)
load(file = path_results_cutting)
debugSource('~/Tesi/project_integration_intersect_3groups/R/borda_sw_mask/driver_create_borda_mask.R', echo=TRUE)
print("Edges in Controls")
print(r_Control$n_residualEdges)
print("Edges in SLA2")
print(r_SLA2$n_residualEdges)
print("Edges in SLA3")
print(r_SLA3$n_residualEdges)
print("Edges in Union")
print(dim(maskU)[1])
print("Union - Controls")
print(r1 <- dim(maskU)[1] - r_Controls$n_residualEdges)
print("Union - SLA2")
print(r2 <- dim(maskU)[1] - r_SLA2$n_residualEdges)
print("Union - SLA3")
print(r3 <- dim(maskU)[1] - r_SLA3$n_residualEdges)
print("Edges in Controls")
print(r_Control$n_residualEdges)
print("Edges in SLA2")
print(r_SLA2$n_residualEdges)
print("Edges in SLA3")
print(r_SLA3$n_residualEdges)
print("Edges in Union")
print(dim(maskU)[1])
print("Union - Controls")
print(r1 <- dim(maskU)[1] - r_Controls$n_residualEdges)
print("Union - SLA2")
print(r2 <- dim(maskU)[1] - r_SLA2$n_residualEdges)
print("Union - SLA3")
print(r3 <- dim(maskU)[1] - r_SLA3$n_residualEdges)
# saving
out <- list("e_controls" = r_Controls$n_residualEdges, "e_SLA2" = r_SLA2$n_residualEdges,
"e_SLA3" = r_SLA3$n_residualEdges, "e_union" = dim(maskU)[1], "e_union_m_controls" = r1,
"e_union_m_SLA2" = r2, "e_union_m_SLA3" = r3 )
write.csv(out, file = pathMask_borda_ws_cutting_info)
write.table(r,file= pathMask_borda_ws_cutting, sep="\t", col.names = F, row.names = F)
save.image(file = "driver_create_borda_mask.RData")
print("Edges in Controls")
print(r_Control$n_residualEdges)
print("Edges in SLA2")
print(r_SLA2$n_residualEdges)
print("Edges in SLA3")
print(r_SLA3$n_residualEdges)
print("Edges in Union")
print(dim(maskU)[1])
print("Union - Controls")
print(r1 <- dim(maskU)[1] - r_Controls$n_residualEdges)
print("Union - SLA2")
print(r2 <- dim(maskU)[1] - r_SLA2$n_residualEdges)
print("Union - SLA3")
print(r3 <- dim(maskU)[1] - r_SLA3$n_residualEdges)
# saving
out <- list("e_controls" = r_Controls$n_residualEdges, "e_SLA2" = r_SLA2$n_residualEdges,
"e_SLA3" = r_SLA3$n_residualEdges, "e_union" = dim(maskU)[1], "e_union_m_controls" = r1,
"e_union_m_SLA2" = r2, "e_union_m_SLA3" = r3 )
write.csv(out, file = pathMask_borda_ws_cutting_info)
write.table(maskU,file= pathMask_borda_ws_cutting, sep="\t", col.names = F, row.names = F)
save.image(file = "driver_create_borda_mask.RData")
time  <- proc.time() - ptm
print(time)
source('~/Tesi/project_integration_intersect_3groups/R/borda_sw_mask/driver_create_borda_mask.R', echo=TRUE)
source('~/Tesi/project_integration_intersect_3groups/R/borda_sw_mask/driver_create_borda_mask.R', echo=TRUE)
rm(list = ls())
source("./borda_extracting_mask.R", chdir = T)
source("./../strong_weak_ties_cutting/sw_cutting.R", chdir = T)
source("./../utils/graphUtils.R", chdir = T)
# -------------------------- Inititialization ----------------------------------
verbose = 1
if(verbose > 0){
print("Initialization..")
}
pathBordaControls <- "./../../data/other/borda/borda_matrix_controls.txt"
pathBordaSLA2 <- "./../../data/other/borda/borda_matrix_SLA2.txt"
pathBordaSLA3 <- "./../../data/other/borda/borda_matrix_SLA3.txt"
pathMask_borda_ws_cutting <- "./../../data/other/borda/borda_mask_ws_cutting.csv"
pathMask_borda_ws_cutting_info <- "./../../data/other/borda/borda_mask_ws_cutting_info.csv"
path_results_cutting <- "./../../data/other/borda/borda_sw_cut_objects.RData"
load(path_results_cutting)
residual_Controls <- r_Controls$residualGraph
residual_SLA2 <- r_SLA2$residualGraph
residual_SLA3 <- r_SLA3$residualGraph
# union masks: first compute all masks, then do the union
# computer all masks
mask1 <- unionMask(residual_Controls, residual_SLA2)
mask2 <- unionMask(residual_Controls, residual_SLA3)
# union
maskU <- rbind(mask1, mask2)
maskU <- unique(maskU)
print("Edges in Controls")
print(r_Controls$n_residualEdges)
print("Edges in SLA2")
print(r_SLA2$n_residualEdges)
print("Edges in SLA3")
print(r_SLA3$n_residualEdges)
print("Edges in Union")
print(dim(maskU)[1])
print("Union - Controls")
print(r1 <- dim(maskU)[1] - r_Controls$n_residualEdges)
print("Union - SLA2")
print(r2 <- dim(maskU)[1] - r_SLA2$n_residualEdges)
print("Union - SLA3")
print(r3 <- dim(maskU)[1] - r_SLA3$n_residualEdges)
# saving
out <- list("e_controls" = r_Controls$n_residualEdges, "e_SLA2" = r_SLA2$n_residualEdges,
"e_SLA3" = r_SLA3$n_residualEdges, "e_union" = dim(maskU)[1], "e_union_m_controls" = r1,
"e_union_m_SLA2" = r2, "e_union_m_SLA3" = r3 )
write.csv(out, file = pathMask_borda_ws_cutting_info)
write.table(maskU,file= pathMask_borda_ws_cutting, sep="\t", col.names = F, row.names = F)
save.image(file = "driver_create_borda_mask.RData")
time  <- proc.time() - ptm
print(time)
residual_Controls <- r_Controls$residualGraph
residual_SLA2 <- r_SLA2$residualGraph
residual_SLA3 <- r_SLA3$residualGraph
# union masks: first compute all masks, then do the union
# computer all masks
mask1 <- unionMask(residual_Controls, residual_SLA2)
mask2 <- unionMask(residual_Controls, residual_SLA3)
# union
maskU <- rbind(mask1, mask2)
maskU <- unique(maskU)
print("Edges in Controls")
print(r_Controls$n_residualEdges)
print("Edges in SLA2")
print(r_SLA2$n_residualEdges)
print("Edges in SLA3")
print(r_SLA3$n_residualEdges)
print("Edges in Union")
print(dim(maskU)[1])
print("Union - Controls")
print(r1 <- dim(maskU)[1] - r_Controls$n_residualEdges)
print("Union - SLA2")
print(r2 <- dim(maskU)[1] - r_SLA2$n_residualEdges)
print("Union - SLA3")
print(r3 <- dim(maskU)[1] - r_SLA3$n_residualEdges)
# saving
out <- list("e_controls" = r_Controls$n_residualEdges, "e_SLA2" = r_SLA2$n_residualEdges,
"e_SLA3" = r_SLA3$n_residualEdges, "e_union" = dim(maskU)[1], "e_union_m_controls" = r1,
"e_union_m_SLA2" = r2, "e_union_m_SLA3" = r3 )
write.csv(out, file = pathMask_borda_ws_cutting_info)
write.table(maskU,file= pathMask_borda_ws_cutting, sep="\t", col.names = F, row.names = F)
save.image(file = "driver_create_borda_mask.RData")
source('~/Tesi/project_integration_intersect_3groups/R/borda_sw_mask/driver_create_borda_mask.R', echo=TRUE)
